openapi: 3.0.1
info:
  version: 'v1'
  title: 'Payment Initiation Service'
  description: 'Open Banking Platform PSD2 API - Payment Initiation'
  
servers:
  - url: https://api.dev.openbankingplatform.com/psd2/paymentinitiation
    description: Optional PSD2 test server

security:
  - oAuth2: [paymentinitiation]

paths:

  #####################################################
  # Payment Information Service
  #####################################################

  /v1/{payment-service}/{payment-product}:
    post:
      summary: Payment initiation request 
      description: | 
        This method is used to initiate a payment at the ASPSP.
      
        ## Variants of Payment Initiation Requests
        
        This method to initiate a payment initiation at the ASPSP can be sent with either a JSON body or an pain.001 body depending on the payment product in the path.
        
        There are the following **payment products**:
        
          - Payment products with payment information in *JSON* format:
            - ***sepa-credit-transfers***
            - ***instant-sepa-credit-transfers***
            - ***target-2-payments***
            - ***cross-border-credit-transfers***
          
          - Payment products with payment information in *pain.001* XML format:
            - ***pain.001-sepa-credit-transfers***
            - ***pain.001-instant-sepa-credit-transfers***
            - ***pain.001-target-2-payments***
            - ***pain.001-cross-border-credit-transfers***
        
        Furthermore the request body depends on the **payment-service**
          * ***payments***: A single payment initiation request.
          * ***bulk-payments***: A collection of several payment iniatiation requests.
          
            In case of a *pain.001* message there are more than one payments contained in the *pain.001 message.
            
            In case of a *JSON* there are several JSON payment blocks contained in a joining list.
          * ***periodic-payments***: 
            Create a standing order initiation resource for recurrent i.e. periodic payments addressable under {paymentId} 
             with all data relevant for the corresponding payment product and the execution of the standing order contained in a JSON body. 
        
        This is the first step in the API to initiate the related recurring/periodic payment.
          
        ## Single and mulitilevel SCA Processes
        
        The Payment Initiation Requests are independent from the need of one ore multilevel 
        SCA processing, i.e. independent from the number of authorizations needed for the execution of payments. 
        
        But the response messages are specific to either one SCA processing or multilevel SCA processing. 
        
        For payment initiation with multilevel SCA, this specification requires an explicit start of the authorization, 
        i.e. links directly associated with SCA processing like 'scaRedirect' or 'scaOAuth' cannot be contained in the 
        response message of a Payment Initation Request for a payment, where multiple authorizations are needed. 
        Also if any data is needed for the next action, like selecting an SCA method is not supported in the response, 
        since all starts of the multiple authorizations are fully equal. 
        In these cases, first an authorization sub-resource has to be generated following the 'startAuthorization' link.
      operationId: initiatePayment
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
        - $ref: "#/components/parameters/PSU-IP-Address_mandatory"
        - $ref: "#/components/parameters/TPP-Redirect-Preferred"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Explicit-Authorization-Preferred"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      requestBody:
        $ref: "#/components/requestBodies/paymentInitiation"
      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_PaymentInitiation"
        '400': 
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401': 
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403': 
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/{payment-service}/{payment-product}/{paymentId}:
    get:
      summary: Get Payment Information
      description: Returns the content of a payment object
      operationId: getPaymentInformation
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_mandatory"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY 
      responses: 
        '200':
          $ref: "#/components/responses/OK_200_PaymentInitiationInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"
    delete:
      summary: Payment Cancellation Request
      description: | 
        This method initiates the cancellation of a payment. 
        Depending on the payment-service, the payment-product and the ASPSP's implementation, 
        this TPP call might be sufficient to cancel a payment. 
        If an authorization of the payment cancellation is mandated by the ASPSP, 
        a corresponding hyperlink will be contained in the response message.
        
        Cancels the addressed payment with resource identification paymentId if applicable to the payment-service, payment-product and received in product related timelines (e.g. before end of business day for scheduled payments of the last business day before the scheduled execution day). 
        
        The response to this DELETE command will tell the TPP whether the 
          * access method was rejected
          * access method was successful, or
          * access method is generally applicable, but further authorization processes are needed.
      operationId: cancelPayment
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY 
      responses:
        '200':
          $ref: "#/components/responses/OK_200_PaymentInitiationCancel" 
          #If the DELETE is sufficient for cancelling the payment
        '202':
          $ref: "#/components/responses/RECEIVED_202_PaymentInitiationCancel" 
          #If the DELETE is not sufficient for cancelling the payment since an authorization of the cancellation by the PSU is needed.
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/{payment-service}/{payment-product}/{paymentId}/status:
    get:
      summary: Payment initiation status request
      description: Check the transaction status of a payment initiation.
      operationId: getPaymentInitiationStatus
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_PaymentInitiationStatus"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/{payment-service}/{payment-product}/{paymentId}/authorizations:
    post: 
      summary: Start the authorization process for a payment initiation
      description: | 
        Create an authorization sub-resource and start the authorization process. 
        The message might in addition transmit authentication and authorization related data. 
        
        This method is iterated n times for a n times SCA authorization in a 
        corporate context, each creating an own authorization sub-endpoint for 
        the corresponding PSU authorising the transaction.
        
        The ASPSP might make the usage of this access method unnecessary in case 
        of only one SCA process needed, since the related authorization resource 
        might be automatically created by the ASPSP after the submission of the 
        payment data with the first POST payments/{payment-product} call.
        
        The start authorization process is a process which is needed for creating a new authorization 
        or cancellation sub-resource. 
        
        This applies in the following scenarios:
        
          * The ASPSP has indicated with an 'startAuthorization' hyperlink in the preceeding Payment 
            Initiation Response that an explicit start of the authorization process is needed by the TPP. 
            The 'startAuthorization' hyperlink can transport more information about data which needs to be 
            uploaded by using the extended forms.
            * 'startAuthorizationWithPsuIdentfication', 
            * 'startAuthorizationWithPsuAuthentication'
            * 'startAuthorizationWithAuthentciationMethodSelection' 
          * The related payment initiation cannot yet be executed since a multilevel SCA is mandated.
          * The ASPSP has indicated with an 'startAuthorization' hyperlink in the preceeding 
            Payment Cancellation Response that an explicit start of the authorization process is needed by the TPP. 
            The 'startAuthorization' hyperlink can transport more information about data which needs to be uploaded 
            by using the extended forms as indicated above.
          * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for 
            executing the cancellation.
          * The signing basket needs to be authorised yet.
      operationId: startPaymentAuthorization
      tags: 
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY 
      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_StartScaProcess"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"
    get:
      summary: Get Payment Initiation Authorization Sub-Resources Request
      description: |
        Read a list of all authorization subresources IDs which have been created.
        
        This function returns an array of hyperlinks to all generated authorization sub-resources.
      operationId: getPaymentInitiationAuthorization
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_Authorizations"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/{payment-service}/{payment-product}/{paymentId}/authorizations/{authorizationId}:
    get:
      summary: Read the SCA Status of the payment authorization
      description: |
        This method returns the SCA status of a payment initiation's authorization sub-resource.
      operationId: getPaymentInitiationScaStatus
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        - $ref: "#/components/parameters/authorizationId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_ScaStatus"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"
    put:
      summary: Update PSU data for payment initiation
      description: |
        This methods updates PSU data on the authorization resource if needed. 
        It may authorise a payment within the Embedded SCA Approach where needed.
        
        Independently from the SCA Approach it supports e.g. the selection of 
        the authentication method and a non-SCA PSU authentication.

        There are several possible Update PSU Data requests in the context of payment initiation services needed, 
        which depends on the SCA approach:
        
        * Redirect SCA Approach:
          A specific Update PSU Data Request is applicable for 
            * the selection of authentication methods, before choosing the actual SCA approach.
        * Decoupled SCA Approach:
          A specific Update PSU Data Request is only applicable for
          * adding the PSU Identification, if not provided yet in the Payment Initiation Request or the Account Information Consent Request, or if no OAuth2 access token is used, or
          * the selection of authentication methods.
        * Embedded SCA Approach: 
          The Update PSU Data Request might be used 
          * to add credentials as a first factor authentication data of the PSU and
          * to select the authentication method and
          * transaction authorization.
      
        The SCA Approach might depend on the chosen SCA method. 
        For that reason, the following possible Update PSU Data request can apply to all SCA approaches:
        
        * Select an SCA method in case of several SCA methods are available for the customer.
      
        There are the following request types on this access path:
          * Update PSU Identification
          * Update PSU Authentication
          * Select PSU Autorization Method 
            WARNING: This method need a reduced header, 
            therefore many optional elements are not present. 
            Maybe in a later version the access path will change.
          * Transaction Authorization
            WARNING: This method need a reduced header, 
            therefore many optional elements are not present. 
            Maybe in a later version the access path will change.
      operationId: updatePaymentPsuData
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        - $ref: "#/components/parameters/authorizationId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
         #method specific header elements # Not always allowed depending on the kind of update which is ask for
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      requestBody:
        content: 
          application/json:
            schema:
              oneOf:
                - {} #Update PSU Identification 
                - $ref: "#/components/schemas/updatePsuAuthentication" #Update PSU Authentication
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod" #Select PSU Authentication Method
                - $ref: "#/components/schemas/transactionAuthorization" #Transaction Authorization
            examples:
              "Update PSU Identification (Decoupled Approach)":
                value: {}
              "Update PSU Authentication (Embedded Approach)":
                $ref: "#/components/examples/updatePsuAuthenticationExample_Embedded"
              "Select PSU Authentication Method (Embedded Approach)":
                $ref: "#/components/examples/selectPsuAuthenticationMethodExample_Embedded"
              "Transaction Authorization (Embedded Approach)":
                $ref: "#/components/examples/transactionAuthorizationExample_Embedded"
      responses:
        '200':
          $ref: "#/components/responses/OK_200_UpdatePsuData"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorizations:
    post:
      summary: Start the authorization process for the cancellation of the addressed payment
      description: | 
        Creates an authorization sub-resource and start the authorization process of the cancellation of the addressed payment. 
        The message might in addition transmit authentication and authorization related data.
        
        This method is iterated n times for a n times SCA authorization in a 
        corporate context, each creating an own authorization sub-endpoint for 
        the corresponding PSU authorising the cancellation-authorization.
        
        The ASPSP might make the usage of this access method unnecessary in case 
        of only one SCA process needed, since the related authorization resource 
        might be automatically created by the ASPSP after the submission of the 
        payment data with the first POST payments/{payment-product} call.
        
        The start authorization process is a process which is needed for creating a new authorization 
        or cancellation sub-resource. 
        
        This applies in the following scenarios:
        
          * The ASPSP has indicated with an 'startAuthorization' hyperlink in the preceeding Payment 
            Initiation Response that an explicit start of the authorization process is needed by the TPP. 
            The 'startAuthorization' hyperlink can transport more information about data which needs to be 
            uploaded by using the extended forms.
            * 'startAuthorizationWithPsuIdentfication', 
            * 'startAuthorizationWithPsuAuthentication'
            * 'startAuthorizationWithAuthentciationMethodSelection' 
          * The related payment initiation cannot yet be executed since a multilevel SCA is mandated.
          * The ASPSP has indicated with an 'startAuthorization' hyperlink in the preceeding 
            Payment Cancellation Response that an explicit start of the authorization process is needed by the TPP. 
            The 'startAuthorization' hyperlink can transport more information about data which needs to be uploaded 
            by using the extended forms as indicated above.
          * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for 
            executing the cancellation.
          * The signing basket needs to be authorised yet.
      operationId: startPaymentInitiationCancellationAuthorization
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_StartScaProcess"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"
    get:
      summary: Will deliver an array of resource identifications to all generated cancellation authorization sub-resources.
      description: |
        Retrieve a list of all created cancellation authorization sub-resources.
      operationId: getPaymentInitiationCancellationAuthorizationInformation
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_CancellationList"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorizations/{cancellationId}:
    get:
      summary: Read the SCA status of the payment cancellation's authorization.
      description: |
        This method returns the SCA status of a payment initiation's authorization sub-resource.
      operationId: getPaymentCancellationScaStatus
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        - $ref: "#/components/parameters/cancellationId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_ScaStatus"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"
    put:
      summary: Update PSU Data for payment initiation cancellation
      description: | 
        This method updates PSU data on the cancellation authorization resource if needed. 
        It may authorise a cancellation of the payment within the Embedded SCA Approach where needed.
        
        Independently from the SCA Approach it supports e.g. the selection of 
        the authentication method and a non-SCA PSU authentication.
        
        This methods updates PSU data on the cancellation authorization resource if needed. 

        There are several possible Update PSU Data requests in the context of a cancellation authorization within the payment initiation services needed, 
        which depends on the SCA approach:
        
        * Redirect SCA Approach:
          A specific Update PSU Data Request is applicable for 
            * the selection of authentication methods, before choosing the actual SCA approach.
        * Decoupled SCA Approach:
          A specific Update PSU Data Request is only applicable for
          * adding the PSU Identification, if not provided yet in the Payment Initiation Request or the Account Information Consent Request, or if no OAuth2 access token is used, or
          * the selection of authentication methods.
        * Embedded SCA Approach: 
          The Update PSU Data Request might be used 
          * to add credentials as a first factor authentication data of the PSU and
          * to select the authentication method and
          * transaction authorization.
      
        The SCA Approach might depend on the chosen SCA method. 
        For that reason, the following possible Update PSU Data request can apply to all SCA approaches:
        
        * Select an SCA method in case of several SCA methods are available for the customer.
      
        There are the following request types on this access path:
          * Update PSU Identification
          * Update PSU Authentication
          * Select PSU Autorization Method 
            WARNING: This method need a reduced header, 
            therefore many optional elements are not present. 
            Maybe in a later version the access path will change.
          * Transaction Authorization
            WARNING: This method need a reduced header, 
            therefore many optional elements are not present. 
            Maybe in a later version the access path will change.
      operationId: updatePaymentCancellationPsuData
      tags:
        - Payment Initiation Service (PIS)
      security:
        - oAuth2: [paymentinitiation]
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        - $ref: "#/components/parameters/cancellationId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
         #method specific header elements # Not always allowed depending on the kind of update which is ask for
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      requestBody:
        content: 
          application/json:
            schema:
              oneOf: 
                - {} #Update PSU Identification
                - $ref: "#/components/schemas/updatePsuAuthentication" #Update PSU Authentication
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod" #Select PSU Authentication Method
                - $ref: "#/components/schemas/transactionAuthorization" #Transaction Authorization
            examples:
              "Update PSU Identification (Embedded Approach)":
                value: {}
              "Update PSU Authentication (Embedded Approach)":
                $ref: "#/components/examples/updatePsuAuthenticationExample_Embedded"
              "Select PSU Authentication Method (Embedded Approach)":
                $ref: "#/components/examples/selectPsuAuthenticationMethodExample_Embedded"
              "Transaction Authorization (Embedded Approach)":
                $ref: "#/components/examples/transactionAuthorizationExample_Embedded"
      responses:
        '200':
          $ref: "#/components/responses/OK_200_UpdatePsuData"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

components:
#####################################################
# Predefined Components
#####################################################

  securitySchemes:
    oAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://auth.dev.openbankingplatform.com/connect/authorize'
          tokenUrl: 'https://auth.dev.openbankingplatform.com/connect/token'
          refreshUrl: 'https://auth.dev.openbankingplatform.com/connect/token'
          scopes:
            paymentinitiation: Payment Initiation

  schemas:
  #####################################################
  # Predefined Schemas
  #####################################################

    paymentId:
      description: 
        Resource identification of the generated payment initiation resource.
      type: string
      example: "1234-wertiq-983"

    authorizationId:
      description: Resource identification of the related SCA 
      type: string
      example: "123auth456"

    authenticationMethodId:
      description: |
            An identification provided by the ASPSP for the later identification of the authentication method selection.
      type: string
      maxLength: 35
      example: "myAuthenticationID"

    consentId:
      description: |
        ID of the corresponding consent object as returned by an Account Information Consent Request.
      type: string

    cancellationId:
      description: Identification for cancellation resource
      type: string
      example: "123auth456"

    transactionStatus:
      description: | 
        The transaction status is filled with codes of the ISO 20022 data table:
        - 'ACCP': 'AcceptedCustomerProfile' - 
          Preceding check of technical validation was successful. 
          Customer profile check was also successful.
        - 'ACSC': 'AcceptedSettlementCompleted' - 
          Settlement on the debtor’s account has been completed.
          
          **Usage:** this can be used by the first agent to report to the debtor that the transaction has been completed. 
          
          **Warning:** this status is provided for transaction status reasons, not for financial information. 
          It can only be used after bilateral agreement.
        - 'ACSP': 'AcceptedSettlementInProcess' - 
          All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.
        - 'ACTC': 'AcceptedTechnicalValidation' - 
          Authentication and syntactical and semantical validation are successful.
        - 'ACWC': 'AcceptedWithChange' - 
          Instruction is accepted but a change will be made, such as date or remittance not sent.
        - 'ACWP': 'AcceptedWithoutPosting' - 
          Payment instruction included in the credit transfer is accepted without being posted to the creditor customer’s account.
        - 'RCVD': 'Received' - 
          Payment initiation has been received by the receiving agent.
        - 'PDNG': 'Pending' - 
          Payment initiation or individual transaction included in the payment initiation is pending. 
          Further checks and status update will be performed.
        - 'RJCT': 'Rejected' - 
          Payment initiation or individual transaction included in the payment initiation has been rejected.
        - 'CANC': 'Cancelled'
          Payment initiation has been cancelled before execution
          
          **Remark:** *Change Request to ISO20022 is still needed.*
      type: string
      enum:
        - "ACCP"
        - "ACSC"
        - "ACSP"
        - "ACTC"
        - "ACWC"
        - "ACWP"
        - "RCVD"
        - "PDNG"
        - "RJCT"
        - "CANC"
      example: "ACCP"

    scaStatus:
      description: |
        This data element is containing information about the status of the SCA method applied. 
        
        The following codes are defined for this data type.
        
          * 'received':
            An authorization or cancellation-authorization resource has been created successfully.
          * 'psuIdentified':
            The PSU related to the authorization or cancellation-authorization resource has been identified.
          * 'psuAuthenticated':
            The PSU related to the authorization or cancellation-authorization resource has been identified and authenticated e.g. by a password or by an access token.
          * 'scaMethodSelected':
            The PSU/TPP has selected the related SCA routine. 
            If the SCA method is chosen implicitly since only one SCA method is available, 
            then this is the first status to be reported instead of 'received'.
          * 'started':
            The addressed SCA routine has been started.
          * 'finalized':
            The SCA routine has been finalized successfully.
          * 'failed':
            The SCA routine failed
          * 'exempted':
            SCA was exempted for the related transaction, the related authorization is successful.
      type: string
      enum:
        - "received"
        - "psuIdentified"
        - "psuAuthenticated"
        - "scaMethodSelected"
        - "started"
        - "finalized"
        - "failed"
        - "exempted"
      example: "psuAuthenticated"

    scaAuthenticationData:
      description: |
        SCA authentication data, depending on the chosen authentication method. 
        If the data is binary, then it is base64 encoded.
      type: string

    transactionFeeIndicator:
      description: |
        If equals 'true', the transaction will involve specific transaction cost as shown by the ASPSP in
        their public price list or as agreed between ASPSP and PSU.
        If equals 'false', the transaction will not involve additional specific transaction costs to the PSU.
      type: boolean

    batchBookingPreferred:
      description: |
        If this element equals 'true', the PSU prefers only one booking entry. 
        If this element equals 'false', the PSU prefers individual booking of all contained individual transactions. 
        
        The ASPSP will follow this preference according to contracts agreed on with the PSU.
      type: boolean
      example: false

    scaMethods:
      description: |
        This data element might be contained, if SCA is required and if the PSU has a choice between different
        authentication methods.
        
        Depending on the risk management of the ASPSP this choice might be offered before or after the PSU
        has been identified with the first relevant factor, or if an access token is transported.
        
        If this data element is contained, then there is also an hyperlink of type 'startAuthorizationWithAuthenticationMethodSelection'
        contained in the response body.
        
        These methods shall be presented towards the PSU for selection by the TPP.
      type: array
      items:
        $ref: "#/components/schemas/authenticationObject"

    chosenScaMethod:
      # description: |
      #  This data element is only contained in the response if the APSPS has chosen the Embedded SCA Approach,
      #  if the PSU is already identified e.g. with the first relevant factor or alternatively an access token,
      #  if SCA is required and if the authentication method is implicitly selected.
      $ref: "#/components/schemas/authenticationObject"

    authenticationType:
      description: |
        Type of the authentication method.
        
        More authentication types might be added during implementation projects and documented in the ASPSP documentation.
        
          - 'SMS_OTP': An SCA method, where an OTP linked to the transaction to be authorised is sent to the PSU through a SMS channel.
          - 'CHIP_OTP': An SCA method, where an OTP is generated by a chip card, e.g. an TOP derived from an EMV cryptogram. 
            To contact the card, the PSU normally needs a (handheld) device. 
            With this device, the PSU either reads the challenging data through a visual interface like flickering or 
            the PSU types in the challenge through the device key pad. 
            The device then derives an OTP from the challenge data and displays the OTP to the PSU.
          - 'PHOTO_OTP': An SCA method, where the challenge is a QR code or similar encoded visual data 
            which can be read in by a consumer device or specific mobile app. 
            The device resp. the specific app than derives an OTP from the visual challenge data and displays 
            the OTP to the PSU.
          - 'PUSH_OTP': An OTP is pushed to a dedicated authentication APP and displayed to the PSU.
      type: string
      enum:
        - "SMS_OTP"
        - "CHIP_OTP"
        - "PHOTO_OTP"
        - "PUSH_OTP"

    authenticationObject:
      description: |
        Authentication Object
      type: object
      required:
        - authenticationType
        - authenticationMethodId
      properties:
        authenticationType:
          $ref: "#/components/schemas/authenticationType"
        authenticationVersion:
          description: |
            Depending on the "authenticationType".
            This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type.
            This version can be referred to in the ASPSP?s documentation.
          type: string
        authenticationMethodId:
          $ref: "#/components/schemas/authenticationMethodId"
        name:
          description: |
            This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP.
            Alternatively this could be a description provided by the ASPSP like "SMS OTP on phone +49160 xxxxx 28".
            This name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.
          type: string
          example: "SMS OTP on phone +49160 xxxxx 28"
        explanation:
          description: |
            Detailed information about the SCA method for the PSU.
          type: string
          example: Detailed information about the SCA method for the PSU.

    challengeData:
      description: |
        It is contained in addition to the data element 'chosenScaMethod' if challenge data is needed for SCA.
        In rare cases this attribute is also used in the context of the 'startAuthorizationWithPsuAuthentication' link.
      type: object
      properties:
        image:
          type: string
          format: byte
          description: |
            PNG data (max. 512 kilobyte) to be displayed to the PSU,
            Base64 encoding, cp. [RFC4648].
            This attribute is used only, when PHOTO_OTP or CHIP_OTP
            is the selected SCA method.
        data:
          type: string
          description: String challenge data
        imageLink:
          type: string
          format: url
          description: A link where the ASPSP will provides the challenge image for the TPP.
        otpMaxLength:
          type: integer
          description: The maximal length for the OTP to be typed in by the PSU.
        otpFormat:
          type: string
          description: The format type of the OTP to be typed in. The admitted values are "characters" or "integer".
          enum:
            - "characters"
            - "integer"
        additionalInformation:
          type: string
          description: |
            Additional explanation for the PSU to explain
            e.g. fallback mechanism for the chosen SCA method.
            The TPP is obliged to show this to the PSU.

    hrefType:
      description: Link to a resource
      type: string
      example: "/v1/payments/sepa-credit-transfers/1234-wertiq-983"

    messageCodeTextUnspecific:
      type: string
      enum:
        - "CERTIFICATE_INVALID"
        - "CERTIFICATE_EXPIRED"
        - "CERTIFICATE_BLOCKED"
        - "CERTIFICATE_REVOKED"
        - "CERTIFICATE_MISSING"
        - "SIGNATURE_INVALID"
        - "SIGNATURE_MISSING"
        - "FORMAT_ERROR"
        - "PARAMETER_NOT_SUPPORTED"
        - "PSU_CREDENTIALS_INVALID"
        - "SERVICE_INVALID"
        - "SERVICE_BLOCKED"
        - "CORPORATE_ID_INVALID"
        - "CONSENT_UNKNOWN"
        - "CONSENT_INVALID"
        - "CONSENT_EXPIRED"
        - "TOKEN_UNKNOWN"
        - "TOKEN_INVALID"
        - "TOKEN_EXPIRED"
        - "RESOURCE_UNKNOWN"
        - "RESOURCE_EXPIRED"
        - "TIMESTAMP_INVALID"
        - "PERIOD_INVALID"
        - "SCA_METHOD_UNKNOWN"
        - "CONFLICT"

    messageCodeTextPisSpecific:
      type: string
      enum:
        - "PRODUCT_INVALID"
        - "PRODUCT_UNKNOWN"
        - "PAYMENT_FAILED"
        - "REQUIRED_KID_MISSING"
        - "EXECUTION_DATE_INVALID"

    messageCodeTextAisSpecific:
      type: string
      enum:
        - "CONSENT_INVALID"
        - "SESSIONS_NOT_SUPPORTED"
        - "ACCESS_EXCEEDED"
        - "REQUESTED_FORMATS_INVALID"

    messageCodeTextPiisSpecific:
      type: string
      enum:
        - "CARD_INVALID"
        - "NO_PIIS_ACTIVATION"

    authorizationsList:
      description: An array of all authorizationIds 
      type: array
      items:
        $ref: "#/components/schemas/authorizationId"

    authorizations:
      description: An array of all authorizationIds 
      type: object
      required:
        - authorizationIds
      properties:
        authorizationIds:
          $ref: "#/components/schemas/authorizationsList"

    accountReferenceIban:
      type: object
      description: |
        Reference to an account by the Primary Account Number (PAN) of a card, 
        can be tokenised by the ASPSP due to PCI DSS requirements.
      required:
        - iban
      properties:
        iban: 
          $ref: "#/components/schemas/iban"
        currency:
          $ref: "#/components/schemas/currencyCode"

    accountReferenceBban:
      type: object
      description: |
        Reference to an Account.
        
        This data elements is used for payment accounts which have no IBAN.
      required:
        - bban
      properties:
        bban: 
          $ref: "#/components/schemas/bban"
        currency:
          $ref: "#/components/schemas/currencyCode"

    accountReferencePan:
      type: object
      description: |
        Reference to an account by the Primary Account Number (PAN) of a card, 
        can be tokenised by the ASPSP due to PCI DSS requirements. 
      required:
        - pan
      properties:
        pan: 
          $ref: "#/components/schemas/pan"
        currency:
          $ref: "#/components/schemas/currencyCode"

    accountReferenceMaskedPan:
      type: object
      description: |
        Reference to an account by the Primary Account Number (PAN) of a card in a masked form.
      required:
        - maskedPan
      properties:
        maskedPan: 
          $ref: "#/components/schemas/maskedPan"
        currency:
          $ref: "#/components/schemas/currencyCode"

    accountReferenceMsisdn:
      type: object
      description: |
        An alias to access a payment account via a registered mobile phone number.
      required:
        - msisdn
      properties:
        msisdn: 
          $ref: "#/components/schemas/msisdn"
        currency:
          $ref: "#/components/schemas/currencyCode"

    cancellationList:
      description: An array of all cancellationIds connected to this resource.
      type: array
      items:
        $ref: "#/components/schemas/cancellationId"

    bicfi: 
      description: |
        BICFI
      type: string
      pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
      example: "AAAADEBBXXX"

    pan:
      description: |
        Primary Account Number according to ISO/IEC 7812.
      type: string
      maxLength: 35
      #According to ISO the following should be valid.
      #maxLength: 19
      #minLength: 8
      #pattern: "[0-9]{8,19}"
      example: "5409050000000000"

    maskedPan:
      description: |
        Masked Primary Account Number
      type: string
      maxLength: 35
      example: "123456xxxxxx1234"

    bban:
      description: |
        Basic Bank Account Number (BBAN) Identifier
        
        This data element can be used in the body of the Consent Request
          Message for retrieving Account access Consent from this Account. This
          data elements is used for payment Accounts which have no IBAN.
          ISO20022: Basic Bank Account Number (BBAN). 
          
          Identifier used nationally by financial institutions, i.e., in individual countries, 
          generally as part of a National Account Numbering Scheme(s), 
          which uniquely identifies the account of a customer.
      type: string
      pattern: "[a-zA-Z0-9]{1,30}" 
      example: "BARC12345612345678"

    msisdn:
      type: string
      maxLength: 35
      description: Mobile phone number.
      example: "+49 170 1234567"

    iban:
      type: string
      description: IBAN of an account
      pattern: "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
      example: "FR7612345987650123456789014"

    address:
      type: object
      required:
        - country
      properties:
        street:
          type: string
          maxLength: 70
        buildingNumber:
          type: string
        city:
          type: string
        postalCode:
          type: string
        country:
          $ref: "#/components/schemas/countryCode"
      example: 
        {
          street: "rue blue",
          buildingnNumber: "89",
          city: "Paris",
          postalCode: "75000",
          country: "FR"
        }

    countryCode:
      description: ISO 3166 ALPHA2 country code
      type: string
      pattern: "[A-Z]{2}"
      example: "SE"

    amount:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          $ref: "#/components/schemas/currencyCode"
        amount:
          $ref: "#/components/schemas/amountValue"
      example: 
        {
          "currency": "EUR", 
          "amount": "123"
        }

    currencyCode:
      description: |
        ISO 4217 Alpha 3 currency code
      type: string
      pattern: "[A-Z]{3}"
      example: "EUR"

    amountValue:
      description: |
        The amount given with fractional digits, where fractions must be compliant to the currency definition.
        Up to 14 significant figures. Negative amounts are signed by minus.
        The decimal separator is a dot.
        
        **Example:**
        Valid representations for EUR with up to two decimals are:
        
          * 1056
          * 5768.2
          * -1.50
          * 5877.78
      type: string
      pattern: "-?[0-9]{1,14}(\\.[0-9]{1,3})?"
      example: "5877.78"

    remittanceInformationUnstructured:
      description: |
        Unstructured remittance information
      type: string
      maxLength: 140
      example: "Ref Number Merchant"

    #####################################################
    # Predefined Text Formats
    #####################################################

    frequencyCode:
      description: |
        The following codes from the "EventFrequency7Code" of ISO 20022 are supported.
        - "Daily"
        - "Weekly"
        - "EveryTwoWeeks"
        - "Monthly"
        - "EveryTwoMonths"
        - "Quarterly"
        - "SemiAnnual"
        - "Annual"
      type: string
      enum:
        - "Daily"
        - "Weekly"
        - "EveryTwoWeeks"
        - "Monthly"
        - "EveryTwoMonths"
        - "Quarterly"
        - "SemiAnnual"
        - "Annual"

    dayOfExecution:
      description: |
        Day of execution as string in the form DD.
        
        Thes string consists always of two characters.
        
        31 is ultimo of the month.
      type: string
      enum: 
        - "01"
        - "02"
        - "03"
        - "04"
        - "05"
        - "06"
        - "07"
        - "08"
        - "09"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"

    executionRule:
      description: |
        "following" or "preceeding" supported as values. 
        This data attribute defines the behavior when recurring payment dates falls on a weekend or bank holiday. 
        The payment is then executed either the "preceeding" or "following" working day.
        ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting 
        this execution rule.
      type: string
      enum:
        - "following"
        - "preceeding"

    psuData:
      description: PSU Data for Update PSU Authentication.
      type: object
      required:
        - password
      properties:
        password:
          description: Password
          type: string

    psuMessageText:
      description: Text to be displayed to the PSU
      type: string
      maxLength: 512

    creditorName:
      description: Creditor Name
      type: string
      maxLength: 70
      example: "Creditor Name"

    #####################################################
    # Predefined Date and Time Related Formats
    #####################################################

    startDate:
      description: |
        The first applicable day of execution starting from this date is the first payment.
      type: string
      format: date

    endDate:
      description: |
        The last applicable day of execution
        If not given, it is an infinite standing order.
      type: string
      format: date

  #####################################################
  # Content of Request Bodies
  #####################################################

    #####################################################
    # Content of Request Bodies - JSON
    #####################################################

    paymentInitiationSct_json:
      description: |
        Body for a SCT payment initation.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"

    paymentInitiationSctInst_json:
      description: |
        Body for a SCT INST payment initation.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140

    paymentInitiationTarget2_json:
      description: |
        Body for a TARGET-2 payment initation.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140

    paymentInitiationCrossBorder_json:
      description: |
        JSON body for a cross-border payment initation.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140

    paymentInitiationSctBulkElement_json:
      description: |
        Body for a bulk SCT payment initation.
      type: object
      required:
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"

    paymentInitiationSctInstBulkElement_json:
      description: |
        Body for a SCT INST payment initation.
      type: object
      required:
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140

    paymentInitiationTarget2BulkElement_json:
      description: |
        Body for a bulk TARGET-2 payment initation.
      type: object
      required:
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140

    paymentInitiationCrossBorderBulkElement_json:
      description: |
        JSON body for a cross-border payment initation.
      type: object
      required:
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140

    periodicPaymentInitiationSct_json:
      description: |
        JSON Body for a periodic SCT payment initation.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
        - startDate
        - frequency
      properties:
        endToEndIdentification: 
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        #Additional Information for periodic payments
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"

    periodicPaymentInitiationSctInst_json:
      description: |
        JSON Body for a periodic SCT INST payment initation.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
        - startDate
        - frequency
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured:
          type: string
          maxLength: 140
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"

    periodicPaymentInitiationTarget2_json:
      description: |
        JSON Body for a periodic target-2 payment initation.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
        - startDate
        - frequency
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured:
          type: string
          maxLength: 140
        #Additional Information for periodic payments
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"

    periodicPaymentInitiationCrossBorder_json:
      description: |
        JSON body for a periodic cross-border payment initation.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
        - startDate
        - frequency
      properties:
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140
        #Additional Information for periodic payments
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"

    bulkPaymentInitiationSct_json:
      description: |
        JSON Body for a bulk SCT payment initation.
      type: object
      required:
        - payments
        - debtorAccount
      properties:
        batchBookingPreferred:
          $ref: "#/components/schemas/batchBookingPreferred"
        requestedExecutionDate:
          type: string
          format: date
        debtorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        payments:
          description: A list of JSON bodies for SCT payments.
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationSctBulkElement_json"
      
    bulkPaymentInitiationSctInst_json:
      description: |
        JSON Body for a bulk SCT INST payment initation.
      type: object
      required:
        - payments
        - debtorAccount
      properties:
        batchBookingPreferred:
          $ref: "#/components/schemas/batchBookingPreferred"
        requestedExecutionDate:
          type: string
          format: date
        debtorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        payments:
          description: A list of JSON bodies for SCT INST payments.
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationSctInstBulkElement_json"

    bulkPaymentInitiationTarget2_json:
      description: |
        JSON Body for a bulk TARGET-2 payment initation.
      type: object
      required:
        - payments
        - debtorAccount
      properties:
        batchBookingPreferred:
          $ref: "#/components/schemas/batchBookingPreferred"
        requestedExecutionDate:
          type: string
          format: date
        debtorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        payments:
          description: A list of JSON bodies for TARGET-2 payments.
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationTarget2BulkElement_json"

    bulkPaymentInitiationCrossBorder_json:
      description: |
        JSON body for a bulk cross-border payment initation.
      type: object
      required:
        - payments
        - debtorAccount
      properties:
        batchBookingPreferred:
          $ref: "#/components/schemas/batchBookingPreferred"
        requestedExecutionDate:
          type: string
          format: date
        debtorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        payments:
          description: A List of JSON bodies for cross-border payments.
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationCrossBorderBulkElement_json"

    updatePsuAuthentication: 
      description: |
        Content of the body of a Update PSU Authentication Request
        
        Password subfield is used.
      type: object
      required: 
        - psuData
      properties:
        psuData:
          $ref: "#/components/schemas/psuData"

    selectPsuAuthenticationMethod:
      description: |
        Content of the body of a Select PSU Authentication Method Request
      type: object
      required: 
        - authenticationMethodId
      properties:
        authenticationMethodId:
          $ref: "#/components/schemas/authenticationMethodId"

    transactionAuthorization:
      description: |
        Content of the body of a Transaction Authorization Request
      type: object
      required: 
        - scaAuthenticationData
      properties:
        scaAuthenticationData:
          $ref: "#/components/schemas/scaAuthenticationData"


      #####################################################
      # Content of Request Bodies - XML
      #####################################################

      #####################################################
      # Content of Request Bodies - Single Part
      #####################################################

    paymentInitiationSct_pain.001: #The same schemas are use for single an bulk payment in case of a pain.001
      description: |
        A pain.001 structure corresponding to the SCT schema
        
        urn:iso:std:iso:20022:tech:xsd:pain.001.001.03
      type: string
      example:
        <Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.03">
          <CstmrCdtTrfInitn>
            <GrpHdr>
              <MsgId>MIPI-123456789RI-123456789</MsgId>
              <CreDtTm>2017-02-14T20:23:34.000Z</CreDtTm>
              <NbOfTxs>1</NbOfTxs>
              <CtrlSum>123</CtrlSum>
              <InitgPty>
                <Nm>PaymentInitiator</Nm>
                <Id><OrgId><Othr><Id>DE10000000012</Id>
                  <SchmeNm><Prptry>PISP</Prptry></SchmeNm></Othr></OrgId></Id>
              </InitgPty>
            </GrpHdr> 
            <PmtInf> 
              <PmtInfId>BIPI-123456789RI-123456789</PmtInfId>
              <PmtMtd>TRF</PmtMtd> 
              <NbOfTxs>1</NbOfTxs>
              <CtrlSum>123</CtrlSum>
              <PmtTpInf><SvcLvl><Cd>SEPA</Cd></SvcLvl></PmtTpInf>
              <ReqdExctnDt>2017-02-15</ReqdExctnDt>
              <Dbtr><Nm>PSU Name</Nm></Dbtr>
              <DbtrAcct><Id><IBAN>DE87200500001234567890</IBAN></Id></DbtrAcct>
              <ChrgBr>SLEV</ChrgBr>
              <CdtTrfTxInf>
                <PmtId><EndToEndId>RI-123456789</EndToEndId></PmtId> 
                <Amt><InstdAmt Ccy="EUR">123</InstdAmt></Amt>
                <Cdtr><Nm>Merchant123</Nm></Cdtr>
                <CdtrAcct><Id><IBAN> DE23100120020123456789</IBAN></Id></CdtrAcct>
                <RmtInf><Ustrd>Ref Number Merchant-123456</Ustrd></RmtInf>
              </CdtTrfTxInf>
            </PmtInf>
          </CstmrCdtTrfInitn>
        </Document>

    paymentInitiationSctInst_pain.001: #The same schemas are use for single an bulk payment in case of a pain.001
      description: |
        A pain.001 structure corresponding to the SCT INST schema.
      type: string
      #example: #TODO Add example for SCT INST pain.001

    paymentInitiationTarget2_pain.001: #The same schemas are use for single an bulk payment in case of a pain.001
      description: |
        A pain.001 structure corresponding to the target-2 schema
        
        For TARGET-2 payments only community wide pain.001 schemes do exist.
      type: string

    paymentInitiationCrossBorder_pain.001: #The same schemas are use for single an bulk payment in case of a pain.001
      description: |
        A pain.001 structure corresponding to the cross-border schema

        For cross-border payments only community wide pain.001 schemes do exist.
      type: string

    #####################################################
    # Content of Request Bodies - XML -Multipart
    #####################################################

    periodicPaymentInitiationMultipartBody:
      description: |
       The multipart message definition for the initiation of a periodic payment initiation 
       where the information of the payment is contained in an pain.001 message (Part 1) and 
       the additional informations related to the periodic payment is an additional JSON message (Part 2).
      type: object
      properties:
        xml_sct: #PART 1
          oneOf: #The same schemas are used for single and bulk payment in case of a pain.001
            - $ref: "#/components/schemas/paymentInitiationSct_pain.001"
            - $ref: "#/components/schemas/paymentInitiationSctInst_pain.001"
            - $ref: "#/components/schemas/paymentInitiationTarget2_pain.001"
            - $ref: "#/components/schemas/paymentInitiationCrossBorder_pain.001"
        json_standingorderType: #PART 2
          $ref: "#/components/schemas/periodicPaymentInitiation_xml-Part2-standingorderType_json"

    periodicPaymentInitiation_xml-Part2-standingorderType_json:
      description: |
        The body part 2 of a periodic payment initation request containes the execution related informations 
        of the periodic payment.
      type: object
      required:
        - startDate
        - frequency
      properties:
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"

  #####################################################
  # Content of Response Bodies
  #####################################################

    paymentInitiationStatusResponse-200_json:
      description: Body of the response for a successful payment initiation status request in case of an JSON based endpoint.
      type: object
      required:
        - transactionStatus
      properties:
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    paymentInitiationStatusResponse-200_xml:
      description: |
        Body of the response for a successful payment initiation status request in case of an XML based endpoint.
        
        The status is returned as a pain.002 structure. 
        
        urn:iso:std:iso:20022:tech:xsd:pain.002.001.03
        
        The chosen XML schema of the Status Request is following the XML schema definitions of the original pain.001 schema.
      type: string

    paymentInitationRequestResponse-201:
      description: Body of the response for a successful payment initiation request.
      type: object
      required:
        - transactionStatus
        - paymentId
        - _links
      properties:
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        paymentId:
          $ref: "#/components/schemas/paymentId"
        transactionFees:
          # description: Can be used by the ASPSP to transport transaction fees relevant for the underlying payments.
          $ref: "#/components/schemas/amount"
        transactionFeeIndicator:
          $ref: "#/components/schemas/transactionFeeIndicator"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challengeData"
        _links:
          $ref: "#/components/schemas/_linksPaymentInitiation"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        tppMessages:
          $ref: "#/components/schemas/tppMessages"

    paymentInitationRequestMultiLevelScaResponse-201:
      description: Body of the response for a successful payment initiation request.
      type: object
      required:
        - transactionStatus
        - paymentId
        - _links
      properties:
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        paymentId:
          $ref: "#/components/schemas/paymentId"
        transactionFees:
          # description: Can be used by the ASPSP to transport transaction fees relevant for the underlying payments.
          $ref: "#/components/schemas/amount"
        transactionFeeIndicator:
          $ref: "#/components/schemas/transactionFeeIndicator"
        _links:
          $ref: "#/components/schemas/_linksPaymentInitiationMultiLevelSca"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        tppMessages:
          $ref: "#/components/schemas/tppMessages"

    paymentInitiationCancelResponse-200_202:
      description: Body of the response for a successful cancel payment request.
      type: object
      required:
        - transactionStatus
      properties:
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challengeData"
        _links:
          $ref: "#/components/schemas/_linksPaymentInitiationCancel"

    paymentInitiationSctWithStatusResponse:
      description: |
        JSON response body consistion of the corresponding SCT payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    paymentInitiationSctInstWithStatusResponse:
      description: |
        JSON response body consistion of the corresponding SCT INST payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    paymentInitiationTarget2WithStatusResponse:
      description: |
        JSON response body consistion of the corresponding TARGET-2 payment initation JSON body together with an 
        optional transaction status field.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    paymentInitiationCrossBorderWithStatusResponse:
      description: |
        JSON response body consistion of the corresponding cross-border payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    periodicPaymentInitiationSctWithStatusResponse:
      description: |
        JSON response body consistion of the corresponding periodic SCT payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
        - startDate
        - frequency
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        #Additional Information for periodic payments
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    periodicPaymentInitiationSctInstWithStatusResponse:
      description: |
        JSON response body consistion of the corresponding periodic SCT INST payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
        - startDate
        - frequency
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        #Additional Information for periodic payments
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    periodicPaymentInitiationTarget2WithStatusResponse:
      description: |
        JSON response body consistion of the corresponding periodic TARGET-2 payment initation JSON body together with 
        an optional transaction status field.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
        - startDate
        - frequency
      properties:
        endToEndIdentification:
          type: string
          maxLength: 35
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured:
          type: string
          maxLength: 140
        #Additional Information for periodic payments
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    periodicPaymentInitiationCrossBorderWithStatusResponse:
      description: |
        JSON response body consistion of the corresponding periodic cross-border payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditorName
        - startDate
        - frequency
      properties:
        debtorAccount: 
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        creditorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        creditorAgent:
          $ref: "#/components/schemas/bicfi"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAddress:
          $ref: "#/components/schemas/address"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140
        #Additional Information for periodic payments
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    bulkPaymentInitiationSctWithStatusResponse:
      description: |
        JSON response body consistion of the corresponding bulk SCT payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - payments
        - debtorAccount
      properties:
        batchBookingPreferred:
          $ref: "#/components/schemas/batchBookingPreferred"
        requestedExecutionDate:
          type: string
          format: date
        debtorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        payments:
          description: A list of JSON bodies for SCT payments.
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationSct_json"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    bulkPaymentInitiationSctInstWithStatusResponse:
      description: |
        JSON response body consistion of the corresponding bulk SCT INST payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - payments
        - debtorAccount
      properties:
        batchBookingPreferred:
          $ref: "#/components/schemas/batchBookingPreferred"
        requestedExecutionDate:
          type: string
          format: date
        debtorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        payments:
          description: A list of JSON bodies for SCT INST payments.
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationSctInst_json"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    bulkPaymentInitiationTarget2WithStatusResponse:
      description: |
        JSON response body consistion of the corresponding bulk TARGET-2 payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - payments
        - debtorAccount
      properties:
        batchBookingPreferred:
          $ref: "#/components/schemas/batchBookingPreferred"
        requestedExecutionDate:
          type: string
          format: date
        debtorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        payments:
          description: A list of JSON bodies for TARGET-2 payments.
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationTarget2_json"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    bulkPaymentInitiationCrossBorderWithStatusResponse: 
      description: |
        JSON response body consistion of the corresponding bulk cross-border payment initation JSON body together with an optional transaction status field.
      type: object
      required:
        - payments
        - debtorAccount
      properties:
        batchBookingPreferred:
          $ref: "#/components/schemas/batchBookingPreferred"
        requestedExecutionDate:
          type: string
          format: date
        debtorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        payments:
          description: A list of JSON bodies for cross-border payments.
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationCrossBorder_json"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"

    scaStatusResponse:
      description: Body of the JSON response with SCA Status
      type: object
      properties:
        scaStatus:
          $ref: "#/components/schemas/scaStatus"

    startScaprocessResponse:
      description: Body of the JSON response for a Start SCA authorization request.
      type: object
      required:
        - scaStatus
        - _links
      properties:
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challengeData"
        _links:
           $ref: "#/components/schemas/_linksStartScaProcess"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"

    updatePsuIdenticationResponse:
      description: Body of the JSON response for a successful update PSU Identification request.
      type: object
      required:
        - _links
        - scaStatus
      properties:
        _links:
          $ref: "#/components/schemas/_linksUpdatePsuIdentification"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"

    updatePsuAuthenticationResponse:
      description: Body of the JSON response for a successful update PSU Authentication request.
      type: object
      required:
        - scaStatus
      properties:
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challengeData"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        _links:
          $ref: "#/components/schemas/_linksUpdatePsuAuthentication"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"

    selectPsuAuthenticationMethodResponse:
      description: Body of the JSON response for a successful select PSU Authentication Method request.
      type: object
      required:
        - scaStatus
      properties:
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challengeData"
        _links:
          $ref: "#/components/schemas/_linksSelectPsuAuthenticationMethod"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"

    #####################################################
    # _links
    #####################################################

    _linksPaymentInitiation: 
      description: |
        A list of hyperlinks to be recognised by the TPP.
        The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when
        processing the request.
        
        **Remark:** All links can be relative or full links, to be decided by the ASPSP.
        
        Type of links admitted in this response, (further links might be added for ASPSP defined extensions):
        
        * 'scaRedirect': 
          In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.
        * 'scaOAuth': 
          In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorization
          Server can be retrieved. The configuration follows the OAuth 2.0 Authorization Server Metadata specification.
        * 'startAuthorization': 
          In case, where an explicit start of the transaction authorization is needed, but no more data needs to be updated 
          (no authentication method to be selected, no PSU identification nor PSU authentication data to be uploaded).
        * 'startAuthorizationWithPsuIdentification': 
          The link to the authorization end-point, where the authorization sub-resource has to be generated while 
          uploading the PSU identification data.
        * 'startAuthorizationWithPsuAuthentication':
          The link to the authorization end-point, where the authorization sub-resource has to be generated while 
          uploading the PSU authentication data.
        * 'startAuthorizationWithAuthenticationMethodSelection': 
          The link to the authorization end-point, where the authorization sub-resource has to be generated while 
          selecting the authentication method. 
          This link is contained under exactly the same conditions as the data element "scaMethods"
        * 'startAuthorizationWithTransactionAuthorization':
          The link to the authorization end-point, where the authorization sub-resource has to be generated while 
          authorising the transaction e.g. by uploading an OTP received by SMS.
        * 'self': 
          The link to the payment initiation resource created by this request.
          This link can be used to retrieve the resource data.
        * 'status': 
          The link to retrieve the transaction status of the payment initiation.
        * 'scaStatus': 
          The link to retrieve the scaStatus of the corresponding authorization sub-resource. 
          This link is only contained, if an authorization sub-resource has been already created.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        startAuthorization:
          $ref: "#/components/schemas/hrefType"
        startAuthorizationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorizationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorizationWithAuthenticationMethodSelection:
          $ref: "#/components/schemas/hrefType"
        startAuthorizationWithTransactionAuthorization:
          $ref: "#/components/schemas/hrefType"
        self:
          $ref: "#/components/schemas/hrefType"
        status:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"
      example: 
        {
        "scaRedirect": {"href": "https://www.testbank.com/asdfasdfasdf"},
        "self": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983"}
        }

    _linksPaymentInitiationMultiLevelSca:
      description: |
        Type of links admitted in this response, (further links might be added for ASPSP defined extensions):
        
          * 'startAuthorization': 
            In case, where an explicit start of the transaction authorization is needed, but no more data needs to be updated (no authentication method to be selected, no PSU identification nor PSU authentication data to be uploaded).
          * 'startAuthorizationWithPsuIdentification': 
            The link to the authorization end-point, where the authorization sub-resource has to be generated while uploading the PSU identification data.
          * 'startAuthorizationWithPsuAuthentication':
            The link to the authorization end-point, where an authorization sub-resource has to be generated while uploading the PSU authentication data.
          * 'self': 
            The link to the payment initiation resource created by this request. This link can be used to retrieve the resource data. 
          * 'status': 
            The link to retrieve the transaction status of the payment initiation.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        startAuthorization:
          $ref: "#/components/schemas/hrefType"
        startAuthorizationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorizationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        self:
          $ref: "#/components/schemas/hrefType"
        status:
          $ref: "#/components/schemas/hrefType"

    _linksPaymentInitiationCancel:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the 
        dynamical decisions of the ASPSP when processing the request.
        
        Remark: All links can be relative or full links, to be decided by the ASPSP.
        
        Type of links admitted in this response, (further links might be added for ASPSP defined extensions):
        
          * 'startAuthorization': 
            In case, where just the authorization process of the cancellation needs to be started, 
            but no additional data needs to be updated for time being (no authentication method to be selected, 
            no PSU identification nor PSU authentication data to be uploaded).
          * 'startAuthorizationWithPsuIdentification': 
            In case where a PSU Identification needs to be updated when starting the cancellation authorization: 
            The link to the cancellation-authorizations end-point, where the cancellation sub-resource has to be 
            generated while uploading the PSU identification data.
          * 'startAuthorizationWithPsuAuthentication': 
            In case of a yet to be created authorization sub-resource: The link to the authorization end-point, 
            where the authorization sub-resource has to be generated while uploading the PSU authentication data.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        startAuthorization:
          $ref: "#/components/schemas/hrefType"
        startAuthorizationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorizationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"

    _linksUpdatePsuIdentification:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.
        
        **Remark:** All links can be relative or full links, to be decided by the ASPSP.
        
        Type of links admitted in this response, (further links might be added for ASPSP 
        defined extensions):
        
        - 'scaStatus': The link to retrieve the scaStatus of the corresponding authorization sub-resource.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaStatus:
          $ref: "#/components/schemas/hrefType"

    _linksUpdatePsuAuthentication:
      description: |
        A list of hyperlinks to be recognised by the TPP. Might be contained, if several authentication methods 
        are available for the PSU.
        Type of links admitted in this response:
          * 'selectAuthenticationMethod': 
            This is a link to a resource, where the TPP can select the applicable second factor authentication 
            methods for the PSU, if there were several available authentication methods. 
            This link is only contained, if the PSU is already identified or authenticated with the first relevant 
            factor or alternatively an access token, if SCA is required and if the PSU has a choice between different 
            authentication methods. 
            If this link is contained, then there is also the data element 'scaMethods' contained in the response body.
          * 'authoriseTransaction': 
            The link to the resource, where the "Transaction Authorization Request" is sent to. 
            This is the link to the resource which will authorise the transaction by checking the SCA authentication 
            data within the Embedded SCA approach.
          * 'scaStatus': 
            The link to retrieve the scaStatus of the corresponding authorization sub-resource.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"

    _linksSelectPsuAuthenticationMethod:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in 
        the response depend on the dynamical decisions of the ASPSP when processing the request.
        
        **Remark:** All links can be relative or full links, to be decided by the ASPSP. 
       
        **Remark:** This method can be applied before or after PSU identification. 
        This leads to many possible hyperlink responses.
        Type of links admitted in this response, (further links might be added for ASPSP defined 
        extensions):
        
        - "scaRedirect": 
          In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to 
          redirect the PSU browser.
        - "scaOAuth": 
          In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the 
          configuration of the Authorization Server can be retrieved. 
          The configuration follows the OAuth 2.0 Authorization Server Metadata specification.
        - "updatePsuIdentification": 
          The link to the authorization or cancellation authorization sub-resource, 
          where PSU identification data needs to be uploaded.
        - "updatePsuAuthentication":
          The link to the authorization or cancellation authorization sub-resource, 
          where PSU authentication data needs to be uploaded.
        "authoriseTransaction":
          The link to the authorization or cancellation authorization sub-resource, 
          where the authorization data has to be uploaded, e.g. the TOP received by SMS. 
        "scaStatus": 
          The link to retrieve the scaStatus of the corresponding authorization sub-resource.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        updatePsuIdentification:
          $ref: "#/components/schemas/hrefType"
        updatePsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"

    _linksStartScaProcess:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the 
        response depend on the dynamical decisions of the ASPSP when processing the request.
        
        **Remark:** All links can be relative or full links, to be decided by the ASPSP.
        
        Type of links admitted in this response, (further links might be added for ASPSP defined 
        extensions):
        
        - 'scaRedirect': 
          In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to 
          redirect the PSU browser.
        - 'scaOAuth': 
          In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the Authorization Server can be retrieved. The configuration follows the OAuth 2.0 Authorization Server Metadata specification.
        - 'updatePsuIdentification': 
          The link to the authorization or cancellation authorization sub-resource, 
          where PSU identification data needs to be uploaded.
        - 'startAuthorizationWithPsuAuthentication':
          The link to the authorization or cancellation authorization sub-resource, 
          where PSU authentication data needs to be uploaded.
        - 'selectAuthenticationMethod':
          The link to the authorization or cancellation authorization sub-resource, 
          where the selected authentication method needs to be uploaded. 
          This link is contained under exactly the same conditions as the data element 'scaMethods'.
        - 'authoriseTransaction':
          The link to the authorization or cancellation authorization sub-resource, 
          where the authorization data has to be uploaded, e.g. the TOP received by SMS. 
        - 'scaStatus': 
          The link to retrieve the scaStatus of the corresponding authorization sub-resource. 
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth: 
          $ref: "#/components/schemas/hrefType"
        updatePsuIdentification: 
          $ref: "#/components/schemas/hrefType"
        startAuthorizationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        scaStatus: 
          $ref: "#/components/schemas/hrefType"

    #####################################################
    # Tpp-Messages
    #####################################################

    tppMessageCategory:
      description: Category of the TPP message category
      type: string
      enum:
        - "ERROR"
        - "WARNING"

    tppMessageText:
      description: Additional explaining text to the TPP.
      type: string
      maxLength: 512

    tppMessageGeneric:
      description: One Message to the TPP on operational issues.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          anyOf:
            - $ref: "#/components/schemas/messageCodeTextUnspecific"
            - $ref: "#/components/schemas/messageCodeTextPisSpecific"
            - $ref: "#/components/schemas/messageCodeTextAisSpecific"
            - $ref: "#/components/schemas/messageCodeTextPiisSpecific"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-FORMAT_ERROR_400:
      description: |
        Format of certain request fields are not matching the XS2A requirements.
        An explicit path to the corresponding field might be added in the return message.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "FORMAT_ERROR"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-PARAMETER_NOT_SUPPORTED_400:
      description: |
        The parameter is not supported by the API provider.
        This code should only be used for parameters that are described as
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "PARAMETER_NOT_SUPPORTED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-RESOURCE_UNKNOWN_404_403_400:
      description: |
        The addressed resource is unknown relative to the TPP.
          - 404 (if account-id in path)
          - 403 (if other resource in path)
          - 400 (if payload)
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "RESOURCE_UNKNOWN"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-RESOURCE_EXPIRED_403_400:
      description: |
        The addressed resource is associated with the TPP but has expired, not addressable anymore.
          - 403 (if path)
          - 400 (if payload)
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "RESOURCE_EXPIRED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-TIMESTAMP_INVALID_400:
      description: Timestamp not in accepted time period.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "TIMESTAMP_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-PERIOD_INVALID_400:
      description: Requested time period out of bound.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "PERIOD_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SCA_METHOD_UNKNOWN_400:
      description: |
        Addressed SCA method in the Authentication Method Select Request is unknown
        or cannot be matched by the ASPSP with the PSU.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SCA_METHOD_UNKNOWN"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_PIIS-CARD_INVALID_400:
      description: |
        Addressed card number is unknown to the ASPSP or not associated to the PSU.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CARD_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_PIIS-NO_PIIS_ACTIVATION_400:
      description: The PSU has not activated the addressed account for the usage of the PIIS associated with the TPP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "NO_PIIS_ACTIVATION"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_PIS-PAYMENT_FAILED_400:
      description: |
        The payment initiation POST request failed during the initial process.
        Additional information may be provided by the ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "PAYMENT_FAILED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_PIS-EXECUTION_DATE_INVALID_400:
      description: |
        The requested execution date is not a valid execution date for the ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "EXECUTION_DATE_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_INVALID_401:
      description: |
        The contents of the signature/corporate seal certificate are not matching PSD2 general PSD2 
        or attribute requirements.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_EXPIRED_401:
      description: Signature/corporate seal certificate is expired.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_EXPIRED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_BLOCKED_401:
      description: |
        Signature/corporate seal certificate has been blocked by the ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_BLOCKED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_REVOKED_401:
      description: |
        Signature/corporate seal certificate has been revoked by QSTP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_REVOKED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_MISSING_401:
      description: |
        Signature/corporate seal certificate was not available in the request but is mandated for the corresponding.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_MISSING"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SIGNATURE_INVALID_401:
      description: Application layer eIDAS Signature for TPP authentication is not correct.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SIGNATURE_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SIGNATURE_MISSING_401:
      description: |
        Application layer eIDAS Signature for TPP authentication is mandated by the ASPSP but is missing.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SIGNATURE_MISSING"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CONSENT_INVALID_401:
      description: |
        The consent was created by this TPP but is not valid for the addressed service/resource.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONSENT_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CONSENT_EXPIRED_401:
      description: The consent was created by this TPP but has expired and needs to be renewed.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONSENT_EXPIRED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-TOKEN_UNKNOWN_401:
      description: The OAuth2 token cannot be matched by the ASPSP relative to the TPP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "TOKEN_UNKNOWN"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-TOKEN_INVALID_401:
      description: The OAuth2 token is associated to the TPP but is not valid for the addressed service/resource.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "TOKEN_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-TOKEN_EXPIRED_401:
      description: The OAuth2 token is associated to the TPP but has expired and needs to be renewed.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "TOKEN_EXPIRED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CORPORATE_ID_INVALID_401:
      description: The PSU-Corporate-ID cannot be matched by the addressed ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CORPORATE_ID_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-PSU_CREDENTIALS_INVALID_401:
      description: |
        The PSU-ID cannot be matched by the addressed ASPSP or is blocked, or a password resp.
        OTP was not correct.
        Additional information might be added.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "PSU_CREDENTIALS_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_AIS-CONSENT_INVALID_401:
      description: |
        The consent definition is not complete or invalid.
        In case of being not complete, the bank is not supporting a completion of the consent towards the PSU.
        Additional information will be provided.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONSENT_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_PIS-REQUIRED_KID_MISSING_401:
      description: |
        The payment initiation has failed due to a missing KID.
        This is a specific message code for the Norwegian market,
        where ASPSP can require the payer to transmit the KID.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "REQUIRED_KID_MISSING"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_PIS-PRODUCT_INVALID_403:
      description: The addressed payment product is not available for the PSU.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "PRODUCT_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SERVICE_BLOCKED_403:
      description: |
        This service is not reachable for the addressed PSU due to a channel independent blocking by the ASPSP.
        Additional information might be given by the ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SERVICE_BLOCKED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CONSENT_UNKNOWN_403_400:
      description: |
        The Consent-ID cannot be matched by the ASPSP relative to the TPP.
          - 403 (if path)
          - 400 (if payload)
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONSENT_UNKNOWN"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_PIS-PRODUCT_UNKNOWN_404:
      description: |
        The addressed payment product is not supported by the ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "PRODUCT_UNKNOWN"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SERVICE_INVALID_400_405: 
      description: |
        Message to the TPP: 
        The addressed service is not valid for the addressed resources or the submitted data.

          - 400 (if payload)
          - 405 (if HTTP method)
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SERVICE_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_AIS-REQUESTED_FORMATS_INVALID_406: 
      description: |
        Message to the TPP: 
        The requested formats in the Accept header entry are not matching the formats offered by the ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "REQUESTED_FORMATS_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CONFLICT_409:
      description: |
        Message to the TPP: 
        The request could not be completed due to a conflict with the current state of the resource.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONFLICT"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_AIS-ACCESS_EXCEEDED_429: 
      description: |
        Message to the TPP: 
        The access on the account has been exceeding the consented multiplicity per day.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "ACCESS_EXCEEDED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessages:
      description: Messages to the TPP on operational issues.
      type: array
      items:
        $ref: "#/components/schemas/tppMessageGeneric"
      example:
        [{
          "category": "ERROR",
          "code": "TOKEN_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages400: 
      description: Messages to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-FORMAT_ERROR_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-PARAMETER_NOT_SUPPORTED_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-SERVICE_INVALID_400_405"  
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_UNKNOWN_404_403_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_EXPIRED_403_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-TIMESTAMP_INVALID_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-PERIOD_INVALID_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-SCA_METHOD_UNKNOWN_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONSENT_UNKNOWN_403_400"
          - $ref: "#/components/schemas/tppMessage_PIIS-CARD_INVALID_400"
          - $ref: "#/components/schemas/tppMessage_PIIS-NO_PIIS_ACTIVATION_400"
          - $ref: "#/components/schemas/tppMessage_PIS-PAYMENT_FAILED_400"
          - $ref: "#/components/schemas/tppMessage_PIS-EXECUTION_DATE_INVALID_400"
      example:
        [{
          "category": "ERROR",
          "code": "FORMAT_ERROR",
          "text": "additional text information of the ASPSP up to 512 characters"
        },{
          "category": "ERROR",
          "code": "FORMAT_ERROR",
          "text": "Further additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages401: 
      description: Messages with HTTP error code 401 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_EXPIRED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_BLOCKED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_REVOKED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_MISSING_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-SIGNATURE_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-SIGNATURE_MISSING_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONSENT_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONSENT_EXPIRED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-TOKEN_UNKNOWN_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-TOKEN_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-TOKEN_EXPIRED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CORPORATE_ID_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-PSU_CREDENTIALS_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_AIS-CONSENT_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_PIS-REQUIRED_KID_MISSING_401"
      example:
        [{
          "category": "ERROR",
          "code": "CERTIFICATE_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages403: 
      description: Messages with HTTP error code 403 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-SERVICE_BLOCKED_403"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONSENT_UNKNOWN_403_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_UNKNOWN_404_403_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_EXPIRED_403_400"
          - $ref: "#/components/schemas/tppMessage_PIS-PRODUCT_INVALID_403"
      example:
        [{
        "category": "ERROR",
        "code": "SERVICE_BLOCKED",
        "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages404: 
      description: Messages with HTTP error code 404 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_PIS-PRODUCT_UNKNOWN_404"
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_UNKNOWN_404_403_400"
      example:
        [{
          "category": "ERROR",
          "code": "PRODUCT_UNKNOWN",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages405:
      description: Messages with HTTP error code 405 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-SERVICE_INVALID_400_405"
      example:
        [{
          "category": "ERROR",
          "code": "SERVICE_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages406:
      description: Messages with HTTP error code 406 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_AIS-REQUESTED_FORMATS_INVALID_406"
      example:
        [{
          "category": "ERROR",
          "code": "REQUESTED_FORMATS_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages409:
      description: Messages with HTTP error code 409 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONFLICT_409"
      example:
        [{
          "category": "ERROR",
          "code": "CONFLICT",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages429: 
      description: Messages with HTTP error code 429 to the TPP on operational issues.
      type: array
      items:
        anyOf: 
          - $ref: "#/components/schemas/tppMessage_AIS-ACCESS_EXCEEDED_429"
      example:
        [{
          "category": "ERROR",
          "code": "ACCESS_EXCEEDED",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

  parameters:
    #####################################################
    # Predefined Parameters
    #####################################################

    paymentService:
      name: payment-service
      in: path
      description: |
        Payment service:
        
        Possible values are:
        * payments
        * bulk-payments
        * periodic-payments
      required: true
      schema:
        type: string
        enum:
          - "payments"
          - "bulk-payments"
          - "periodic-payments"

    paymentProduct:
      name: payment-product
      in: path
      description: |
        The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).
        The ASPSP will publish which of the payment products/endpoints will be supported.
        
        The following payment products are supported:
          - sepa-credit-transfers
          - instant-sepa-credit-transfers
          - target-2-payments
          - cross-border-credit-transfers
          - pain.001-sepa-credit-transfers
          - pain.001-instant-sepa-credit-transfers
          - pain.001-target-2-payments
          - pain.001-cross-border-credit-transfers
        
        **Remark:** For all SEPA Credit Transfer based endpoints which accept XML encoding, 
        the XML pain.001 schemes provided by EPC are supported by the ASPSP as a minimum for the body content. 
        Further XML schemes might be supported by some communities.
        
        **Remark:** For cross-border and TARGET-2 payments only community wide pain.001 schemes do exist. 
        There are plenty of country specificic scheme variants.
      required: true
      schema:
        type: string
        enum:
          - "sepa-credit-transfers"
          - "instant-sepa-credit-transfers"
          - "target-2-payments"
          - "cross-border-credit-transfers"
          - "pain.001-sepa-credit-transfers"
          - "pain.001-instant-sepa-credit-transfers"
          - "pain.001-target-2-payments"
          - "pain.001-cross-border-credit-transfers"

    paymentId:
      name: paymentId
      in: path
      description: Resource identification of the generated payment initiation resource.
      required: true
      schema:
        $ref: "#/components/schemas/paymentId"

    cancellationId:
      name: cancellationId
      in: path
      description: Identification for cancellation resource.
      required: true
      schema:
        $ref: "#/components/schemas/cancellationId"

    authorizationId:
      name: authorizationId
      in: path
      description: Resource identification of the related SCA.
      required: true
      schema:
        $ref: "#/components/schemas/authorizationId"

    consentId_HEADER_optional:
      name: Consent-ID
      in: header
      description: |
        This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined AIS/PIS service.
        This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.
      required: false
      schema:
        $ref: "#/components/schemas/consentId"

    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    X-BicFi:
      name: X-BicFi
      in: header
      description: BICFI
      required: true
      schema:
        type: string
        pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
        example: "AAAADEBBXXX"

    Digest:
      name: Digest
      in: header
      description: Is contained if and only if the "Signature" element is contained in the header of the request.
      schema:
        type: string
      required: false # conditional
      example: "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="

    Signature:
      name: Signature
      in: header
      description: |
        A signature of the request by the TPP on application level. This might be mandated by ASPSP.
      schema:
        type: string
      required: false # conditional
      example: >
        keyId="SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE",algorithm="rsa-sha256",
        headers="Digest X-Request-ID PSU-ID TPP-Redirect-URI Date",
        signature="Base64(RSA-SHA256(signing string))"

    TPP-Signature-Certificate:
      name: TPP-Signature-Certificate
      in: header
      description: |
        The certificate used for signing the request, in base64 encoding. 
        Must be contained if a signature is contained.
      schema:
        type: string
        format: byte
      required: false # conditional

    TPP-Redirect-Preferred:
      name: TPP-Redirect-Preferred
      in: header
      description: |
        If it equals "true", the TPP prefers a redirect over an embedded SCA approach.
        If it equals "false", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled
        SCA approach, depending on the choice of the SCA procedure by the TPP/PSU.
        If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the
        TPP/PSU.
      schema:
        type: boolean
      required: false

    TPP-Redirect-URI:
      name: TPP-Redirect-URI
      in: header
      description: |
        URI of the TPP, where the transaction flow shall be redirected to after a Redirect.
        
        Mandated for the Redirect SCA Approach (including OAuth2 SCA approach), specifically 
        when TPP-Redirect-Preferred equals "true".
        It is recommended to always use this header field.
        
        **Remark for Future:** 
        This field might be changed to mandatory in the next version of the specification.
      schema:
        type: string
        format: uri
      required: false # conditional

    TPP-Nok-Redirect-URI:
      name: TPP-Nok-Redirect-URI
      in: header
      description: |
        If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case
        of a negative result of the redirect SCA method. This might be ignored by the ASPSP.
      schema:
        type: string
        format: uri
      required: false

    TPP-Explicit-Authorization-Preferred:
      name: TPP-Explicit-Authorization-Preferred
      in: header
      description: |
        If it equals "true", the TPP prefers to start the authorization process separately, 
        e.g. because of the usage of a signing basket. 
        This preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.
        
        If it equals "false" or if the parameter is not used, there is no preference of the TPP. 
        This especially indicates that the TPP assumes a direct authorization of the transaction in the next step, 
        without using a signing basket.
      schema:
        type: boolean
      required: false

    PSU-ID: 
      name: PSU-ID
      in: header
      description: |
        Client ID of the PSU in the ASPSP client interface. Might be mandated in the ASPSP's documentation.
        Is not contained if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in an preceeding
        AIS service in the same session.
      schema:
        type: string
      required: false
      example: "PSU-1234"

    PSU-ID-Type: 
      name: PSU-ID-Type
      in: header
      description: |
        Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.
      schema:
        type: string
      required: false

    PSU-Corporate-ID: 
      name: PSU-Corporate-ID
      in: header
      description: |
        Might be mandated in the ASPSP's documentation. Only used in a corporate context.
      schema:
        type: string
      required: false

    PSU-Corporate-ID-Type: 
      name: PSU-Corporate-ID-Type
      in: header
      description: |
        Might be mandated in the ASPSP's documentation. Only used in a corporate context.
      schema:
        type: string
      required: false

    PSU-IP-Address_mandatory:
      name: PSU-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.
      schema:
        type: string
        format: ipv4
      required: true
      example: 192.168.8.78

    PSU-IP-Address_optional:
      name: PSU-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.
      schema:
        type: string
        format: ipv4
      required: false
      example: 192.168.8.78

    PSU-IP-Port:
      name: PSU-IP-Port
      in: header
      description: |
        The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.
      schema:
        oneOf:
          - type: integer
          - type: string
      required: false
      example: "1234"

    PSU-Accept:
      name: PSU-Accept
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-Accept-Charset:
      name: PSU-Accept-Charset
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-Accept-Encoding:
      name: PSU-Accept-Encoding
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-Accept-Language:
      name: PSU-Accept-Language
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-User-Agent:
      name: PSU-User-Agent
      in: header
      description: |
        The forwarded Agent header field of the HTTP request between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-Http-Method:
      name: PSU-Http-Method
      in: header
      description: |
        HTTP method used at the PSU ? TPP interface, if available.
        Valid values are:
        * GET
        * POST
        * PUT
        * PATCH
        * DELETE
      schema:
        type: string
        enum:
          - "GET"
          - "POST"
          - "PUT"
          - "PATCH"
          - "DELETE"
      required: false

    PSU-Device-ID:
      name: PSU-Device-ID
      in: header
      description: |
        UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.
        UUID identifies either a device or a device dependant application installation.
        In case of an installation identification this ID need to be unaltered until removal from device.
      schema:
        type: string
        format: uuid
      required: false
      example: "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"

    PSU-Geo-Location:
      name: PSU-Geo-Location
      in: header
      description: |
        The forwarded Geo Location of the corresponding http request between PSU and TPP if available.
      schema:
        type: string
        pattern: '(GEO:)[0-9]{1,3}\.([-])?[0-9]{6}\,([-])?[0-9]{1,3}\.[0-9]{6}'
      required: false
      example: GEO:52.506931,13.144558

    consentId_HEADER_mandatory:
      name: Consent-ID
      in: header
      description: |
        This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.
      required: true
      schema:
        $ref: "#/components/schemas/consentId"

  requestBodies:
    #####################################################
    # Reusable Request Bodies
    #####################################################
  
    paymentInitiation:
      description: |
        JSON request body for a payment inition request message 
        
        There are the following payment-products supported:
          * "sepa-credit-transfers" with JSON-Body
          * "instant-sepa-credit-transfers" with JSON-Body
          * "target-2-payments" with JSON-Body
          * "cross-border-credit-transfers" with JSON-Body
          * "pain.001-sepa-credit-transfers" with XML pain.001.001.03 body for SCT scheme
          * "pain.001-instant-sepa-credit-transfers" with XML pain.001.001.03 body for SCT INST scheme
          * "pain.001-target-2-payments" with pain.001 body. 
            Only country specific schemes are currently available
          * "pain.001-cross-border-credit-transfers" with pain.001 body. 
            Only country specific schemes are currently available
          
        There are the following payment-services supported:
          * "payments"
          * "periodic-payments"
          * "bulk-paments"
        
        All optional, conditional and predefined but not yet used fields are defined.
      required: true
      content: 
        application/json:
          schema:
            oneOf: 
              - $ref: "#/components/schemas/paymentInitiationSct_json"
              - $ref: "#/components/schemas/paymentInitiationSctInst_json"
              - $ref: "#/components/schemas/paymentInitiationTarget2_json"
              - $ref: "#/components/schemas/paymentInitiationCrossBorder_json"
              - $ref: "#/components/schemas/periodicPaymentInitiationSct_json"
              - $ref: "#/components/schemas/periodicPaymentInitiationSctInst_json"
              - $ref: "#/components/schemas/periodicPaymentInitiationTarget2_json"
              - $ref: "#/components/schemas/periodicPaymentInitiationCrossBorder_json"
              - $ref: "#/components/schemas/bulkPaymentInitiationSct_json"
              - $ref: "#/components/schemas/bulkPaymentInitiationSctInst_json"
              - $ref: "#/components/schemas/bulkPaymentInitiationTarget2_json"
              - $ref: "#/components/schemas/bulkPaymentInitiationCrossBorder_json"
          examples:
            "Example 1: 'payments' - 'sepa-credit-transfers'":
              $ref: "#/components/examples/paymentInitiationSctBody_payments_json"
            "Example 2: 'periodic-payments' - 'sepa-credit-transfers'":
              $ref: "#/components/examples/paymentInitiationSctBody_periodic-payments_json"
            "Example 3: 'bulk-payments' - 'sepa-credit-transfers'":
              $ref: "#/components/examples/paymentInitiationSctBody_bulk-payments_json"
        application/xml:
          schema:
            oneOf: #The same schemas are used for single and bulk payment in case of a pain.001
              - $ref: "#/components/schemas/paymentInitiationSct_pain.001"
              - $ref: "#/components/schemas/paymentInitiationSctInst_pain.001"
              - $ref: "#/components/schemas/paymentInitiationTarget2_pain.001"
              - $ref: "#/components/schemas/paymentInitiationCrossBorder_pain.001"
          examples:
            "Example 1: 'payments' - 'pain.001-sepa-credit-transfers'":
              $ref: "#/components/examples/pain.001.001_SCT_singleTransaction"
        multipart/form-data: #For periodic-payments with pain.001
          schema:
            $ref: "#/components/schemas/periodicPaymentInitiationMultipartBody"

  headers:
    #####################################################
    # Reusable Response Header Elements
    #####################################################
  
    X-Request-ID:
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    ASPSP-SCA-Approach:
      description: |
        This data element must be contained, if the SCA Approach is already fixed.
        Possible values are
          * EMBEDDED
          * DECOUPLED
          * REDIRECT
        The OAuth SCA approach will be subsumed by REDIRECT.
      schema:
        type: string
        enum:
          - "EMBEDDED"
          - "DECOUPLED"
          - "REDIRECT"
        example: "EMBEDDED"
      required: false

    Location:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: false

  responses:
    #####################################################
    # Reusabale Responses
    #####################################################

    #####################################################
    # Positive Responses
    #####################################################

    OK_200_PaymentInitiationInformation: 
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
           schema:
            oneOf: 
              - $ref: "#/components/schemas/paymentInitiationSctWithStatusResponse"
              - $ref: "#/components/schemas/paymentInitiationSctInstWithStatusResponse"
              - $ref: "#/components/schemas/paymentInitiationTarget2WithStatusResponse"
              - $ref: "#/components/schemas/paymentInitiationCrossBorderWithStatusResponse"
              - $ref: "#/components/schemas/periodicPaymentInitiationSctWithStatusResponse"
              - $ref: "#/components/schemas/periodicPaymentInitiationSctInstWithStatusResponse"
              - $ref: "#/components/schemas/periodicPaymentInitiationTarget2WithStatusResponse"
              - $ref: "#/components/schemas/periodicPaymentInitiationCrossBorderWithStatusResponse"
              - $ref: "#/components/schemas/bulkPaymentInitiationSctWithStatusResponse"
              - $ref: "#/components/schemas/bulkPaymentInitiationSctInstWithStatusResponse"
              - $ref: "#/components/schemas/bulkPaymentInitiationTarget2WithStatusResponse"
              - $ref: "#/components/schemas/bulkPaymentInitiationCrossBorderWithStatusResponse"
        application/xml:
          schema:
            oneOf: #The same schemas are used for single and bulk payment in case of a pain.001
              - $ref: "#/components/schemas/paymentInitiationSct_pain.001"
              - $ref: "#/components/schemas/paymentInitiationSctInst_pain.001"
              - $ref: "#/components/schemas/paymentInitiationTarget2_pain.001"
              - $ref: "#/components/schemas/paymentInitiationCrossBorder_pain.001"
          examples:
            "Example 1: 'payments' - 'pain.001-sepa-credit-transfers'":
              $ref: "#/components/examples/pain.001.001_SCT_singleTransaction"
        multipart/form-data: #For periodic-payments with pain.001
          schema:
            $ref: "#/components/schemas/periodicPaymentInitiationMultipartBody"

    OK_200_PaymentInitiationStatus:
      description: OK
      headers: 
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/paymentInitiationStatusResponse-200_json"
          examples:
            simple:
              $ref: "#/components/examples/paymentInitiationStatusResponse_json_Simple"
            extended:
              $ref: "#/components/examples/paymentInitiationStatusResponse_json_Extended"
        application/xml:
          schema:
            $ref: "#/components/schemas/paymentInitiationStatusResponse-200_xml"
          examples: 
            "Payment Initiation Status Response Body XML for SCT":
              $ref: "#/components/examples/pain.002.001_SCT_singleTransaction"

    OK_200_Authorizations:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/authorizations"
          examples:
            Example:
              $ref: "#/components/examples/authorizationListExample"

    OK_200_PaymentInitiationCancel:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/paymentInitiationCancelResponse-200_202"
          examples:
            Example:
              $ref: "#/components/examples/paymentInitiationCancelResponse-200_202"

    OK_200_ScaStatus:
      description: OK
      headers: 
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/scaStatusResponse"

    OK_200_CancellationList:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/cancellationList"
          examples:
            "Example 1":
              $ref: "#/components/examples/cancellationListExample"

    OK_200_UpdatePsuData:
      description: OK 
      headers: 
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"
      content:
        application/json:
          schema:
            oneOf: 
              - $ref: "#/components/schemas/updatePsuIdenticationResponse" #Update PSU Identification
              - $ref: "#/components/schemas/updatePsuAuthenticationResponse" #Update PSU Authentication
              - $ref: "#/components/schemas/selectPsuAuthenticationMethodResponse" #Select Authentication Method
              - $ref: "#/components/schemas/scaStatusResponse" #Transaction Authorization
          examples: 
            "Update PSU Identification - Payment Initiation (Decoupled Approach)":
              $ref: "#/components/examples/updatePsuIdentificationResponseExample_Decoupled_payments"
            "Update PSU Authentication - Payment Initiation (Embedded Approach)":
              $ref: "#/components/examples/updatePsuAuthenticationResponseExample_Embedded_payments"
            "Select PSU Authentication - Payment Initiation Method (Embedded Approach)":
              $ref: "#/components/examples/selectPsuAuthenticationMethodResponseExample_Embedded_payments"
            "Transaction Authorization (Embedded Approach)":
              $ref: "#/components/examples/transactionAuthorizationResponseExample"

    CREATED_201_PaymentInitiation:
      description: CREATED
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        Location:
          $ref: "#/components/headers/Location"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/paymentInitationRequestResponse-201"
              - $ref: "#/components/schemas/paymentInitationRequestMultiLevelScaResponse-201"
          examples:
            "Response in case of a redirect with an implicitly created authorization sub-resource":
              $ref: "#/components/examples/paymentInitiationExample_json_Redirect"
            "Response in case of a redirect where an explicit authorization start is needed":
              $ref: "#/components/examples/paymentInitiationExample_json__RedirectExplicitAuthorization"
            "Response in case of an OAuth2 SCA approach approach with implicitly creating an authorization sub-resource":
              $ref: "#/components/examples/paymentInitiationExample_json_OAuth2"
            "Response in case of the decoupled approach with explicit start of authorization needed (will be done with the update PSU identification function)":
              $ref: "#/components/examples/paymentInitiationExample_json_Decoupled"
            "Response in case of the embedded approach with explicit start of authorization":
              $ref: "#/components/examples/paymentInitiationExample_json_Embedded"

    CREATED_201_StartScaProcess:
      description: Created
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/startScaprocessResponse"
          examples: 
            "Example 1: payments - Decoupled Approach": 
               $ref: "#/components/examples/startScaProcessResponseExample1"

    RECEIVED_202_PaymentInitiationCancel:
      description: Received
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/paymentInitiationCancelResponse-200_202"
          examples:
            Example:
              $ref: "#/components/examples/paymentInitiationCancelResponse-202"

    #####################################################
    # Negative Responses
    #####################################################

    BAD_REQUEST_400:
      description: Bad Request
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages400" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "FORMAT_ERROR",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    UNAUTHORIZED_401:
      description: Unauthorized
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages401" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "CERTIFICATE_INVALID",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    FORBIDDEN_403:
      description: Forbidden
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages403" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "SERVICE_BLOCKED",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    NOT_FOUND_404:
      description: Not found
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages404" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "PRODUCT_UNKNOWN",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    METHOD_NOT_ALLOWED_405:
      description: Method Not Allowed
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages405" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "SERVICE_INVALID",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    NOT_ACCEPTABLE_406:
      description: Not Acceptable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages406" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "REQUESTED_FORMATS_INVALID",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    REQUEST_TIMEOUT_408: 
      description: Request Timeout
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY
      
    CONFLICT_409:
      description: Conflict
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages409"
      
    PRECONDITION_FAILED_412:
      description: Precondition Failed
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY

    UNSUPPORTED_MEDIA_TYPE_415:
      description: Unsupported Media Type
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY

    TOO_MANY_REQUESTS_429:
      description: Too Many Requests
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages429" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "ACCESS_EXCEEDED",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    INTERNAL_SERVER_ERROR_500:
      description: Internal Server Error
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY

    SERVICE_UNAVAILABLE_503:
      description: Service Unavailable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY

  examples:
    #####################################################
    # Predefined Examples
    #####################################################

    pain.001.001_SCT_singleTransaction:
      description: A pain.001.001.03 message in case of SCT
      value: >
        <Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.03">
          <CstmrCdtTrfInitn>
            <GrpHdr>
              <MsgId>MIPI-123456789RI-123456789</MsgId>
              <CreDtTm>2017-02-14T20:23:34.000Z</CreDtTm>
              <NbOfTxs>1</NbOfTxs>
              <CtrlSum>123</CtrlSum>
              <InitgPty>
                <Nm>PaymentInitiator</Nm>
                <Id><OrgId><Othr><Id>DE10000000012</Id>
                  <SchmeNm><Prptry>PISP</Prptry></SchmeNm></Othr></OrgId></Id>
              </InitgPty>
            </GrpHdr> 
            <PmtInf> 
              <PmtInfId>BIPI-123456789RI-123456789</PmtInfId>
              <PmtMtd>TRF</PmtMtd> 
              <NbOfTxs>1</NbOfTxs>
              <CtrlSum>123</CtrlSum>
              <PmtTpInf><SvcLvl><Cd>SEPA</Cd></SvcLvl></PmtTpInf>
              <ReqdExctnDt>2017-02-15</ReqdExctnDt>
              <Dbtr><Nm>PSU Name</Nm></Dbtr>
              <DbtrAcct><Id><IBAN>DE87200500001234567890</IBAN></Id></DbtrAcct>
              <ChrgBr>SLEV</ChrgBr>
              <CdtTrfTxInf>
                <PmtId><EndToEndId>RI-123456789</EndToEndId></PmtId> 
                <Amt><InstdAmt Ccy="EUR">123</InstdAmt></Amt>
                <Cdtr><Nm>Merchant123</Nm></Cdtr>
                <CdtrAcct><Id><IBAN> DE23100120020123456789</IBAN></Id></CdtrAcct>
                <RmtInf><Ustrd>Ref Number Merchant-123456</Ustrd></RmtInf>
              </CdtTrfTxInf>
            </PmtInf>
          </CstmrCdtTrfInitn>
        </Document>

    pain.002.001_SCT_singleTransaction:
      description: A pain.002.001.03 message in case of SCT
      value: >
        <Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.002.001.03">
          <CstmrPmtStsRpt>
            <GrpHdr>
              <MsgId>4572457256725689726906</MsgId>
              <CreDtTm>2017-02-14T20:24:56.021Z</CreDtTm>
              <DbtrAgt><FinInstnId><BIC>ABCDDEFF</BIC></FinInstnId></DbtrAgt>
              <CdtrAgt><FinInstnId><BIC>DCBADEFF</BIC></FinInstnId></CdtrAgt>
            </GrpHdr>
            <OrgnlGrpInfAndSts>
              <OrgnlMsgId>MIPI-123456789RI-123456789</OrgnlMsgId>
              <OrgnlMsgNmId>pain.001.001.03</OrgnlMsgNmId>
              <OrgnlCreDtTm>2017-02-14T20:23:34.000Z</OrgnlCreDtTm>
              <OrgnlNbOfTxs>1</OrgnlNbOfTxs>
              <OrgnlCtrlSum>123</OrgnlCtrlSum>
              <GrpSts>ACCT</GrpSts>
            </OrgnlGrpInfAndSts>
            <OrgnlPmtInfAndSts>
              <OrgnlPmtInfId>BIPI-123456789RI-123456789</OrgnlPmtInfId>
              <OrgnlNbOfTxs>1</OrgnlNbOfTxs>
              <OrgnlCtrlSum>123</OrgnlCtrlSum>
              <PmtInfSts>ACCT</PmtInfSts>
            </OrgnlPmtInfAndSts>
          </CstmrPmtStsRpt>
        </Document>

    paymentInitiationSctBody_payments_json:
      value:
        {    
          "instructedAmount": {"currency": "EUR", "amount": "123.50"},
          "debtorAccount": {"iban": "DE40100100103307118608"},
          "creditorName": "Merchant123",
          "creditorAccount": {"iban": "DE02100100109307118603"},
          "remittanceInformationUnstructured": "Ref Number Merchant"
        }

    paymentInitiationSctBody_periodic-payments_json:
      value:
        {
        "instructedAmount": {"currency": "EUR", "amount": "123"},
        "debtorAccount": {"iban": "DE40100100103307118608"},
        "creditorName": "Merchant123",
        "creditorAccount": {"iban": "DE23100120020123456789"},
        "remittanceInformationUnstructured": "Ref Number Abonnement",
        "startDate": "2018-03-01",
        "executionRule": "latest",
        "frequency": "monthly",
        "dayOfExecution": "01"
        }

    paymentInitiationSctBody_bulk-payments_json:
      value:
        {
        "batchBookingPreferred": "true",
        "debtorAccount": {"iban": "DE40100100103307118608"},
        "requestedExecutionDate": "2018-08-01",
        "payments": 
          [
            {
            instructedAmount": {"currency": "EUR", "amount": "123.50"},
            "creditorName": "Merchant123",
            "creditorAccount": {"iban": "DE02100100109307118603"},
            "remittanceInformationUnstructured": "Ref Number Merchant 1"
            }, {
            instructedAmount": {"currency": "EUR", "amount": "34.10"},
            "creditorName": "Merchant456",
            "creditorAccount": {"iban": "FR7612345987650123456789014"},
            "remittanceInformationUnstructured": "Ref Number Merchant 2"
            }]
        }

    startScaProcessResponseExample1:
      value:
        { 
           "scaStatus": "received",
           "psuMessage": "Please use your BankApp for transaction Authorization.",
           "_links":
            {
              "scaStatus":  {"href":"/v1/payments/sepa-credit-transfers/qwer3456tzui7890/authorizations/123auth456"}
            }
        }

    updatePsuAuthenticationExample_Embedded:
      description: Update PSU Authentication request body for the embedded approach.
      value:
        {
          "psuData": {"password": "start12"}
        }

    selectPsuAuthenticationMethodExample_Embedded:
      description: Select PSU Authentication Method request body for the embedded approach.
      value:
        {
          authenticationMethodId: "myAuthenticationID"
        }

    transactionAuthorizationExample_Embedded:
      description: Transaction Authorization request body for the embedded approach.
      value:
        {
         "scaAuthenticationData": "123456"
        }

    paymentInitiationExample_json_Redirect:
      description: "Response in case of a redirect with an implicitly created authorization sub-resource"
      value:
        {
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "scaRedirect": {"href": "https://www.testbank.com/asdfasdfasdf"},
            "self": {"href": "/v1/payments/sepa-credit-transfers/sepa-credit-transfers/1234-wertiq-983"},
            "status": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983/status"},
            "scaStatus": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983/authorizations/123auth456"}
            }
        }

    paymentInitiationExample_json__RedirectExplicitAuthorization:
      description: "Response in case of a redirect with an explicit authorization start"
      value:
        {
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "self": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983"},
            "status": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983/status"},
            "startAuthorization": {"href": "/v1/payments/sepa-credit-transfers/payments1234-wertiq-983/authorizations"}
            }
        }

    paymentInitiationExample_json_OAuth2:
      description: "Response in case of an OAuth2 SCA approach approach with implicitly creating an authorization sub-resource"
      value:
        { 
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "scaOAuth": {"href": "https://www.testbank.com/oauth/.well-known/oauth-authorization-server"},
            "self": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983"},
            "status": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983/status"},
            "scaStatus": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983/authorizations/123auth456"}
            }
        }

    paymentInitiationExample_json_Decoupled:
      description: "Response in case of the decoupled approach with explicit start of authorization needed"
      value:
        { 
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "startAuthorizationWithPsuIdentification": {"href":"/v1/payments/sepa-credit-transfers/1234-wertiq-983/authorizations"},
            "self": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983"}
            }
        }

    paymentInitiationExample_json_Embedded:
      description: "Response in case of the embedded approach with explicit start of authorization"
      value:
        { 
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "startAuthenticationWithPsuAuthentication": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983/authorizations"},
            "self": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983"}
            }
        }

    paymentInitiationStatusResponse_json_Simple:
      value:
        { 
        "transactionStatus": "ACCP"
        }

    paymentInitiationCancelResponse-200_202:
      value:
        {
          "transactionStatus": "CANC"
        }

    paymentInitiationCancelResponse-202:
      value:
        {
          "transactionStatus": "ACTC",
          "_links": 
            {
            "self": {"href": "/v1/payments/sepa-credit-transfers/123456scheduled789"},
            "status": {"href": "/v1/payments/sepa-credit-transfers/123456scheduled789/status"},
            "startAuthorization": {"href": "/v1/payments/sepa-credit-transfers/123456scheduled789/cancellation-authorizations"}
            }
        }

    paymentInitiationStatusResponse_json_Extended:
      value: |
        { 
          "transactionStatus": "ACCP",
          "scaStatus": "Some SCA Status"
        }

    updatePsuIdentificationResponseExample_Decoupled_payments:
      description: Response of an Update PSU Identification for a payment initiation request for the decoupled approach.
      value:
        { 
          "scatransactionStatus": "psuIdentified",
          "psuMessage": "Please use your BankApp for transaction Authorization.",
          "_links":
            {
              "scaStatus":  {"href":"/v1/payments/sepa-credit-transfers/qwer3456tzui7890/authorizations/123auth456"}
            }
        }

    updatePsuAuthenticationResponseExample_Embedded_payments:
      description: Response of an Update PSU Authentication for a consent request for the embedded approach.
      value:
        { 
          "scaStatus": "psuAuthenticated",
          _links: {
           "authoriseTransaction": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983/authorizations/123auth456"}
          }
        }

    selectPsuAuthenticationMethodResponseExample_Embedded_payments:
      description: Response of a Select PSU Authentication Method payment initiation request for the embedded approach
      value:
        { 
          "scaStatus": "scaMethodSelected",
          "chosenScaMethod": {
          "authenticationType": "SMS_OTP",
          "authenticationMethodId": "myAuthenticationID"},
          "challengeData": {
          "otpMaxLength": "6",
          "otpFormat": "integer"},
          "_links": {
             "authoriseTransaction": {"href": "/v1/payments/sepa-credit-transfers/1234-wertiq-983/authorizations/123auth456"}
          }
        }

    transactionAuthorizationResponseExample:
      description: Response of a Transaction Authorization request for the embedded approach.
      value:
        { 
          "scaStatus": "finalized"
        }

    authorizationListExample:
      value:
        { 
          "authorizationIds": ["123auth456"]
        }
    
    cancellationListExample:
      value:
        { 
          "cancellationIds": ["123auth456"]
        }

tags:
  #####################################################
  # Predefined Tags to Group Methods
  #####################################################

  - name: Payment Initiation Service (PIS)
    description: |
      The Decription for Payment Initiation Service (PIS) offers the following services:
        * Initiation and update of a payment request
        * Status information of a payment