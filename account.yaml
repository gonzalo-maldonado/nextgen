openapi: 3.0.1
info:
  version: "v1"
  title: 'Account Information Service'
  description: 'Open Banking Platform PSD2 API - Account Information'
  
servers:
  - url: https://api.dev.openbankingplatform.com/psd2/accountinformation
    description: Optional PSD2 test server

security:
  - oAuth2: [paymentinitiation]

paths:
  #####################################################
  # Account Information Service
  #####################################################

  #####################################################
  # Accounts
  #####################################################

  /v1/accounts:
    get:
      summary: Read Account List
      description: | 
        Read the identifiers of the available payment account together with 
        booking balance information, depending on the consent granted.
        
        It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. 
        The addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, 
        respectively the OAuth2 access token. 
        
        Returns all identifiers of the accounts, to which an account access has been granted to through 
        the /consents endpoint by the PSU. 
        In addition, relevant information about the accounts and hyperlinks to corresponding account 
        information resources are provided if a related consent has been already granted.
        
        Remark: Note that the /consents endpoint optionally offers to grant an access on all available 
        payment accounts of a PSU. 
        In this case, this endpoint will deliver the information about all available payment accounts 
        of the PSU at this ASPSP.
      operationId: getAccountList
      tags:
        - Account Information Service (AIS)
      security:
        - oAuth2: [accountinformation]
      parameters:
        #path # NO PATH PARAMETER
        #query
        - $ref: "#/components/parameters/withBalanceQuery"
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_AccountList"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/accounts/{account-id}:
    get:
      summary: Read Account Details
      description: | 
        Reads details about an account, with balances where required. 
        It is assumed that a consent of the PSU to 
        this access is already given and stored on the ASPSP system. 
        The addressed details of this account depends then on the stored consent addressed by consentId, 
        respectively the OAuth2 access token.
        
        **NOTE:** The account-id can represent a multicurrency account. 
        In this case the currency code is set to "XXX".
        
        Give detailed information about the addressed account.
        
        Give detailed information about the addressed account together with balance information
      operationId: readAccountDetails
      tags:
        - Account Information Service (AIS)
      security:
        - oAuth2: [accountinformation]
      parameters:
        #path
        - $ref: "#/components/parameters/accountId"
        #query
        - $ref: "#/components/parameters/withBalanceQuery"
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_AccountDetails"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/accounts/{account-id}/balances:
    get:
      summary: Read Balance
      description: |
        Reads account data from a given account addressed by "account-id". 
        
        **Remark:** This account-id can be a tokenised identification due to data protection reason since the path 
        information might be logged on intermediary servers within the ASPSP sphere. 
        This account-id then can be retrieved by the "GET Account List" call.
        
        The account-id is constant at least throughout the lifecycle of a given consent.
      operationId: getBalances
      tags:
        - Account Information Service (AIS)
      security:
        - oAuth2: [accountinformation]
      parameters:
        #path
        - $ref: "#/components/parameters/accountId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_Balances"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/accounts/{account-id}/transactions/:
    get:
      summary: Read Transaction List
      description: |
        Read transaction reports or transaction lists of a given account ddressed by "account-id", depending on the steering parameter 
        "bookingStatus" together with balances.
        
        For a given account, additional parameters are e.g. the attributes "dateFrom" and "dateTo". 
        The ASPSP might add balance information, if transaction lists without balances are not supported.
      operationId: getTransactionList
      tags:
        - Account Information Service (AIS)
      security:
        - oAuth2: [accountinformation]
      parameters:
        #path
        - $ref: "#/components/parameters/accountId"
        #query
        - $ref: "#/components/parameters/dateFrom"
        - $ref: "#/components/parameters/dateTo"
        - $ref: "#/components/parameters/entryReferenceFrom"
        - $ref: "#/components/parameters/bookingStatus"
        - $ref: "#/components/parameters/deltaList"
        - $ref: "#/components/parameters/withBalanceQuery"
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
        #- $ref: "#/components/parameters/Accept" #Can not defined in Open API. See general comments in the description attached to the top level of the file.
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_Transactions"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

  /v1/accounts/{account-id}/transactions/{resourceId}: 
    get:
      summary: Read Transaction Details
      description: |
        Reads transaction details from a given transaction addressed by "resourceId" on a given account addressed by "account-id". 
        This call is only available on transactions as reported in a JSON format.
        
        **Remark:** Please note that the PATH might be already given in detail by the corresponding entry of the response of the 
        "Read Transaction List" call within the _links subfield.
      operationId: getTransactionDetails
      tags:
        - Account Information Service (AIS)
      security:
        - oAuth2: [accountinformation]
      parameters:
        #path
        - $ref: "#/components/parameters/accountId"
        - $ref: "#/components/parameters/resourceId"
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-BicFi"
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/TPP-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      responses:
        '200':
          $ref: "#/components/responses/OK_200_TransactionDetails"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408"
        '409':
          $ref: "#/components/responses/CONFLICT_409"
        '412':
          $ref: "#/components/responses/PRECONDITION_FAILED_412"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503"

components:
  #####################################################
  # Predefined Components
  #####################################################

  securitySchemes:
    oAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://auth.dev.openbankingplatform.com/connect/authorize'
          tokenUrl: 'https://auth.dev.openbankingplatform.com/connect/token'
          refreshUrl: 'https://auth.dev.openbankingplatform.com/connect/token'
          scopes:
            accountinformation: Account Information

  schemas:
  #####################################################
  # Predefined Schemas
  #####################################################

    accountId:
      description: This identification is denoting the addressed account, where the transaction has been performed. 
      type: string
      example: "qwer3456tzui7890"

    consentId:
      description: |
        ID of the corresponding consent object as returned by an Account Information Consent Request.
      type: string
      
    resourceId:
      description: |
        This identification is given by the attribute resourceId of the corresponding entry of a transaction list.
      type: string
      example: "3dc3d5b3-7023-4848-9853-f5400a64e80f"

    hrefType:
      description: Link to a resource
      type: string
      example: "/v1/payments/sepa-credit-transfers/1234-wertiq-983"

    accountReferenceIban:
      type: object
      description: |
        Reference to an account by the Primary Account Number (PAN) of a card, 
        can be tokenised by the ASPSP due to PCI DSS requirements.
      required:
        - iban
      properties:
        iban: 
          $ref: "#/components/schemas/iban"
        currency:
          $ref: "#/components/schemas/currencyCode"

    accountReferenceBban:
      type: object
      description: |
        Reference to an Account.
        
        This data elements is used for payment accounts which have no IBAN.
      required:
        - bban
      properties:
        bban: 
          $ref: "#/components/schemas/bban"
        currency:
          $ref: "#/components/schemas/currencyCode"

    accountReferencePan:
      type: object
      description: |
        Reference to an account by the Primary Account Number (PAN) of a card, 
        can be tokenised by the ASPSP due to PCI DSS requirements. 
      required:
        - pan
      properties:
        pan: 
          $ref: "#/components/schemas/pan"
        currency:
          $ref: "#/components/schemas/currencyCode"

    accountReferenceMaskedPan:
      type: object
      description: |
        Reference to an account by the Primary Account Number (PAN) of a card in a masked form.
      required:
        - maskedPan
      properties:
        maskedPan: 
          $ref: "#/components/schemas/maskedPan"
        currency:
          $ref: "#/components/schemas/currencyCode"

    accountReferenceMsisdn:
      type: object
      description: |
        An alias to access a payment account via a registered mobile phone number.
      required:
        - msisdn
      properties:
        msisdn: 
          $ref: "#/components/schemas/msisdn"
        currency:
          $ref: "#/components/schemas/currencyCode"

    balanceType:
      description: |
        The following balance types are defined:
          - "closingBooked": 
            Balance of the account at the end of the pre-agreed account reporting period. 
            It is the sum of the opening booked balance at the beginning of the period and all entries booked 
            to the account during the pre-agreed account reporting period.
            
            For card-accounts, this is composed of
            
              - invoiced, but not yet paid entries
            
          - "expected":
            Balance composed of booked entries and pending items known at the time of calculation, 
            which projects the end of day balance if everything is booked on the account and no other entry is posted.
            
            For card accounts, this is composed of 
              - invoiced, but not yet paid entries, 
              - not yet invoiced but already booked entries and
              - pending items (not yet booked)
            
          - "authorised":
            The expected balance together with the value of a pre-approved credit line the ASPSP makes permanently available to the user.
            
            For card-accounts:
            
            "money to spend with the value of a pre-approved credit limit on the card account"
            
          - "openingBooked":
            Book balance of the account at the beginning of the account reporting period. 
            It always equals the closing book balance from the previous report.
          - "interimAvailable":
            Available balance calculated in the course of the account �servicer�s business day, 
            at the time specified, and subject to further changes during the business day. 
            The interim balance is calculated on the basis of booked credit and debit items during the calculation 
            time/period specified.
            
            For card-accounts, this is composed of
              - invoiced, but not yet paid entries, 
              - not yet invoiced but already booked entries
          - "forwardAvailable":
            Forward available balance of money that is at the disposal of the account owner on the date specified.
          - "nonInvoiced": 
            Only for card accounts, to be checked yet. #TODO CARD-ACCOUNTS nonInvoiced New in spec. detailes needed
          - "available": #TODO MISSING IN SPEC: 'available' New in spec. Detailes needed.
      type: string
      enum:
          - "closingBooked"
          - "expected"
          - "authorised"
          - "openingBooked"
          - "interimAvailable"
          - "forwardAvailable"
          - "nonInvoiced"
          - "available"

    cashAccountType:
      description: |
        ExternalCashAccountType1Code from ISO 20022.
      type: string

    accountStatus:
      description: |
        Account status. The value is one of the following:
          - "enabled": account is available
          - "deleted": account is terminated
          - "blocked": account is blocked e.g. for legal reasons
        If this field is not used, than the account is available in the sense of this specification.
      type: string
      enum:
        - "enabled"
        - "deleted"
        - "blocked"

    accountDetails:
      description: |
        The ASPSP shall give at least one of the account reference identifiers:
          - iban
          - bban
          - pan
          - maskedPan
          - msisdn
        If the account is a multicurrency account currency code in "currency" is set to "XXX".
      type: object
      properties:
        resourceId:
          description: This shall be filled, if addressable resource are created by the ASPSP on the /accounts or /card-accounts endpoint.
          type: string
          maxLength: 35
        iban:
          $ref: "#/components/schemas/iban"
        bban:
          $ref: "#/components/schemas/bban"
        msisdn:
          $ref: "#/components/schemas/msisdn"
        currency:
          $ref: "#/components/schemas/currencyCode"
        name:
          description: Name of the account given by the bank or the PSU in online-banking.
          type: string
          maxLength: 35
        product:
          description: Product name of the bank for this account, proprietary definition.
          type: string
          maxLength: 35
        cashAccountType:
          $ref: "#/components/schemas/cashAccountType"
        status:
          $ref: "#/components/schemas/accountStatus"
        bic:
          $ref: "#/components/schemas/bicfi"
        linkedAccounts:
          description: Case of a set of pending card transactions, the APSP will provide the relevant cash account the card is set up on.
          type: string
          maxLength: 70
        usage:
          description: |
            Specifies the usage of the account
              * PRIV: private personal account
              * ORGA: professional account
          type: string
          maxLength: 140
          enum:
            - "PRIV"
            - "ORGA"
        details:
          description: |
            Specifications that might be provided by the ASPSP
              - characteristics of the account
              - characteristics of the relevant card
          type: string
          maxLength: 140
        balances:
          $ref: "#/components/schemas/balanceList"
        _links:
          $ref: "#/components/schemas/_linksAccountDetails"

    accountList:
      description: |
        List of accounts with details.
      type: object
      required:
        - accounts
      properties:
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/accountDetails"

    accountReport:
      description: JSON based account report.
      type: object
      required:
        - booked
        - _links
      properties:
        booked:
          $ref: "#/components/schemas/transactionList"
        pending:
          $ref: "#/components/schemas/transactionList"
        _links:
          $ref: "#/components/schemas/_linksAccountReport"

    transactionList:
      description: Array of transaction details
      type: array
      items: 
        $ref: "#/components/schemas/transactionDetails"

    transactionDetails:
      description: Transaction details
      type: object
      required:
        - transactionAmount
      properties:
        transactionId:
          description: |
            the Transaction Id can be used as access-ID in the API, where more details on an transaction is offered. 
            If this data attribute is provided this shows that the AIS can get access on more details about this 
            transaction using the GET Transaction Details Request 
          type: string
        entryReference:
          description: |
            Is the identification of the transaction as used e.g. for reference for deltafunction on application level. 
            The same identification as for example used within camt.05x messages.
          type: string
          maxLength: 35
        endToEndId:
          description: Unique end to end identity.
          type: string
          maxLength: 35
        mandateId:
          description: Identification of Mandates, e.g. a SEPA Mandate ID.
          type: string
          maxLength: 35
        checkId:
          description: Identification of a Cheque.
          type: string
          maxLength: 35
        creditorId:
          description: Identification of Creditors, e.g. a SEPA Creditor ID.
          type: string
          maxLength: 35
        bookingDate:
          $ref: "#/components/schemas/bookingDate"
        valueDate:
          description: The Date at which assets become available to the account owner in case of a credit.
          type: string
          format: date
        transactionAmount:
          $ref: "#/components/schemas/amount"
        exchangeRate:
          $ref: "#/components/schemas/exchangeRateList"
        creditorName:
          $ref: "#/components/schemas/creditorName"
        creditorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        ultimateCreditor:
          $ref: "#/components/schemas/ultimateCreditor"
        debtorName:
          $ref: "#/components/schemas/debtorName"
        debtorAccount:
          oneOf: 
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        ultimateDebtor:
          $ref: "#/components/schemas/ultimateDebtor"
        remittanceInformationUnstructured: 
          type: string
          maxLength: 140
        remittanceInformationStructured:
          description: |
            Reference as contained in the structured remittance reference structure (without the surrounding XML structure).
            
            Different from other places the content is containt in plain form not in form of a structered field.
          type: string
          maxLength: 140
        purposeCode:
          $ref: "#/components/schemas/purposeCode"
        bankTransactionCode:
          $ref: "#/components/schemas/bankTransactionCode"
        proprietaryBankTransactionCode:
          $ref: "#/components/schemas/proprietaryBankTransactionCode"
        _links:
          $ref: "#/components/schemas/_linksTransactionDetails"

    exchangeRateList:
      description: Array of exchange rates
      type: array
      items: 
        $ref: "#/components/schemas/exchangeRate"

    exchangeRate:
      description: Exchange Rate
      type: object
      required:
        - currencyFrom
        - rateFrom
        - currencyTo
        - rateTo
        - rateDate
      properties:
        currencyFrom:
          $ref: "#/components/schemas/currencyCode"
        rateFrom:
          type: string
        currencyTo:
          $ref: "#/components/schemas/currencyCode"
        rateTo:
          type: string
        rateDate:
          type: string
          format: date
        rateContract:
          type: string

    balance:
      description: |
        A single balance element
      type:
        object
      required:
        - balanceAmount
        - balanceType
      properties:
        balanceAmount:
          $ref: "#/components/schemas/amount"
        balanceType:
          $ref: "#/components/schemas/balanceType"
        lastChangeDateTime:
          description: |
            This data element might be used to indicate e.g. with the expected or booked balance that no action is known 
            on the account, which is not yet booked.
          type: string
          format: date-time
        referenceDate:
          description: Reference date of the balance
          type: string
          format: date
        lastCommittedTransaction:
          description: |
            "entryReference" of the last commited transaction to support the TPP in identifying whether all 
            PSU transactions are already known.
          type: string
          maxLength: 35

    balanceList:
      description: |
        A list of balances regarding this account, e.g. the current balance, the last booked balance.
        The list migght be restricted to the current ballance.
      type: array
      items:
        $ref: "#/components/schemas/balance"

    bicfi: 
      description: |
        BICFI
      type: string
      pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
      example: "AAAADEBBXXX"

    pan:
      description: |
        Primary Account Number according to ISO/IEC 7812.
      type: string
      maxLength: 35
      #According to ISO the following should be valid.
      #maxLength: 19
      #minLength: 8
      #pattern: "[0-9]{8,19}"
      example: "5409050000000000"

    maskedPan:
      description: |
        Masked Primary Account Number
      type: string
      maxLength: 35
      example: "123456xxxxxx1234"

    bban:
      description: |
        Basic Bank Account Number (BBAN) Identifier
        
        This data element can be used in the body of the Consent Request
          Message for retrieving Account access Consent from this Account. This
          data elements is used for payment Accounts which have no IBAN.
          ISO20022: Basic Bank Account Number (BBAN). 
          
          Identifier used nationally by financial institutions, i.e., in individual countries, 
          generally as part of a National Account Numbering Scheme(s), 
          which uniquely identifies the account of a customer.
      type: string
      pattern: "[a-zA-Z0-9]{1,30}" 
      example: "BARC12345612345678"

    msisdn:
      type: string
      maxLength: 35
      description: Mobile phone number.
      example: "+49 170 1234567"

    iban:
      type: string
      description: IBAN of an account
      pattern: "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
      example: "FR7612345987650123456789014"

    amount:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          $ref: "#/components/schemas/currencyCode"
        amount:
          $ref: "#/components/schemas/amountValue"
      example: 
        {
          "currency": "EUR", 
          "amount": "123"
        }

    currencyCode:
      description: |
        ISO 4217 Alpha 3 currency code
      type: string
      pattern: "[A-Z]{3}"
      example: "EUR"

    amountValue:
      description: |
        The amount given with fractional digits, where fractions must be compliant to the currency definition.
        Up to 14 significant figures. Negative amounts are signed by minus.
        The decimal separator is a dot.
        
        **Example:**
        Valid representations for EUR with up to two decimals are:
        
          * 1056
          * 5768.2
          * -1.50
          * 5877.78
      type: string
      pattern: "-?[0-9]{1,14}(\\.[0-9]{1,3})?"
      example: "5877.78"

    #####################################################
    # Predefined Text Formats
    #####################################################

    purposeCode:
      description: |
        ExternalPurpose1Code from ISO 20022.
        
        Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
      type: string
      enum:
        - "BKDF"
        - "BKFE"
        - "BKFM"
        - "BKIP"
        - "BKPP"
        - "CBLK"
        - "CDCB"
        - "CDCD"
        - "CDCS"
        - "CDDP"
        - "CDOC"
        - "CDQC"
        - "ETUP"
        - "FCOL"
        - "MTUP"
        - "ACCT"
        - "CASH"
        - "COLL"
        - "CSDB"
        - "DEPT"
        - "INTC"
        - "LIMA"
        - "NETT"
        - "BFWD"
        - "CCIR"
        - "CCPC"
        - "CCPM"
        - "CCSM"
        - "CRDS"
        - "CRPR"
        - "CRSP"
        - "CRTL"
        - "EQPT"
        - "EQUS"
        - "EXPT"
        - "EXTD"
        - "FIXI"
        - "FWBC"
        - "FWCC"
        - "FWSB"
        - "FWSC"
        - "MARG"
        - "MBSB"
        - "MBSC"
        - "MGCC"
        - "MGSC"
        - "OCCC"
        - "OPBC"
        - "OPCC"
        - "OPSB"
        - "OPSC"
        - "OPTN"
        - "OTCD"
        - "REPO"
        - "RPBC"
        - "RPCC"
        - "RPSB"
        - "RPSC"
        - "RVPO"
        - "SBSC"
        - "SCIE"
        - "SCIR"
        - "SCRP"
        - "SHBC"
        - "SHCC"
        - "SHSL"
        - "SLEB"
        - "SLOA"
        - "SWBC"
        - "SWCC"
        - "SWPT"
        - "SWSB"
        - "SWSC"
        - "TBAS"
        - "TBBC"
        - "TBCC"
        - "TRCP"
        - "AGRT"
        - "AREN"
        - "BEXP"
        - "BOCE"
        - "COMC"
        - "CPYR"
        - "GDDS"
        - "GDSV"
        - "GSCB"
        - "LICF"
        - "MP2B"
        - "POPE"
        - "ROYA"
        - "SCVE"
        - "SERV"
        - "SUBS"
        - "SUPP"
        - "TRAD"
        - "CHAR"
        - "COMT"
        - "MP2P"
        - "ECPG"
        - "ECPR"
        - "ECPU"
        - "EPAY"
        - "CLPR"
        - "COMP"
        - "DBTC"
        - "GOVI"
        - "HLRP"
        - "HLST"
        - "INPC"
        - "INPR"
        - "INSC"
        - "INSU"
        - "INTE"
        - "LBRI"
        - "LIFI"
        - "LOAN"
        - "LOAR"
        - "PENO"
        - "PPTI"
        - "RELG"
        - "RINP"
        - "TRFD"
        - "FORW"
        - "FXNT"
        - "ADMG"
        - "ADVA"
        - "BCDM"
        - "BCFG"
        - "BLDM"
        - "BNET"
        - "CBFF"
        - "CBFR"
        - "CCRD"
        - "CDBL"
        - "CFEE"
        - "CGDD"
        - "CORT"
        - "COST"
        - "CPKC"
        - "DCRD"
        - "DSMT"
        - "DVPM"
        - "EDUC"
        - "FACT"
        - "FAND"
        - "FCPM"
        - "FEES"
        - "GOVT"
        - "ICCP"
        - "IDCP"
        - "IHRP"
        - "INSM"
        - "IVPT"
        - "MCDM"
        - "MCFG"
        - "MSVC"
        - "NOWS"
        - "OCDM"
        - "OCFG"
        - "OFEE"
        - "OTHR"
        - "PADD"
        - "PTSP"
        - "RCKE"
        - "RCPT"
        - "REBT"
        - "REFU"
        - "RENT"
        - "REOD"
        - "RIMB"
        - "RPNT"
        - "RRBN"
        - "RVPM"
        - "SLPI"
        - "SPLT"
        - "STDY"
        - "TBAN"
        - "TBIL"
        - "TCSC"
        - "TELI"
        - "TMPG"
        - "TPRI"
        - "TPRP"
        - "TRNC"
        - "TRVC"
        - "WEBI"
        - "ANNI"
        - "CAFI"
        - "CFDI"
        - "CMDT"
        - "DERI"
        - "DIVD"
        - "FREX"
        - "HEDG"
        - "INVS"
        - "PRME"
        - "SAVG"
        - "SECU"
        - "SEPI"
        - "TREA"
        - "UNIT"
        - "FNET"
        - "FUTR"
        - "ANTS"
        - "CVCF"
        - "DMEQ"
        - "DNTS"
        - "HLTC"
        - "HLTI"
        - "HSPC"
        - "ICRF"
        - "LTCF"
        - "MAFC"
        - "MARF"
        - "MDCS"
        - "VIEW"
        - "CDEP"
        - "SWFP"
        - "SWPP"
        - "SWRS"
        - "SWUF"
        - "ADCS"
        - "AEMP"
        - "ALLW"
        - "ALMY"
        - "BBSC"
        - "BECH"
        - "BENE"
        - "BONU"
        - "CCHD"
        - "COMM"
        - "CSLP"
        - "GFRP"
        - "GVEA"
        - "GVEB"
        - "GVEC"
        - "GVED"
        - "GWLT"
        - "HREC"
        - "PAYR"
        - "PEFC"
        - "PENS"
        - "PRCP"
        - "RHBS"
        - "SALA"
        - "SSBE"
        - "LBIN"
        - "LCOL"
        - "LFEE"
        - "LMEQ"
        - "LMFI"
        - "LMRK"
        - "LREB"
        - "LREV"
        - "LSFL"
        - "ESTX"
        - "FWLV"
        - "GSTX"
        - "HSTX"
        - "INTX"
        - "NITX"
        - "PTXP"
        - "RDTX"
        - "TAXS"
        - "VATX"
        - "WHLD"
        - "TAXR"
        - "B112"
        - "BR12"
        - "TLRF"
        - "TLRR"
        - "AIRB"
        - "BUSB"
        - "FERB"
        - "RLWY"
        - "TRPT"
        - "CBTV"
        - "ELEC"
        - "ENRG"
        - "GASB"
        - "NWCH"
        - "NWCM"
        - "OTLC"
        - "PHON"
        - "UBIL"
        - "WTER"

    bankTransactionCode: 
      description: |
        Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO 20022. 
        
        This code type is concatenating the three ISO20022 Codes 
          * Domain Code, 
          * Family Code, and 
          * SubFamiliy Code 
        by hyphens, resulting in “DomainCode”-“FamilyCode”-“SubFamilyCode”.
      type: string
      example: "PMNT-RCDT-ESCT"

    proprietaryBankTransactionCode:
      description: |
        Proprietary bank transaction code as used within a community or within an ASPSP e.g. 
        for MT94x based transaction reports.
      type: string
      maxLength: 35
    
    creditorName:
      description: Creditor Name
      type: string
      maxLength: 70
      example: "Creditor Name"

    debtorName:
      description: Debtor Name
      type: string
      maxLength: 70
      example: "Debtor Name"

    ultimateDebtor:
      description: Ultimate Debtor
      type: string
      maxLength: 70
      example: "Ultimate Debtor"

    ultimateCreditor:
      description: Ultimate Creditor
      type: string
      maxLength: 70
      example: "Ultimate Creditor"

    #####################################################
    # Predefined Date and Time Related Formats
    #####################################################

    bookingDate:
      description: |
        The Date when an entry is posted to an account on the ASPSPs books.
      type: string
      format: date

    #####################################################
    # Content of Response Bodies
    #####################################################

    readBalanceResponse-200:
      description: Body of the response for a successful read balance request.
      type: object
      required:
        - balances
      properties:
        account:
          oneOf:
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        balances:
          $ref: "#/components/schemas/balanceList"

    transactionsResponse-200_json:
      description: Body of the JSON response for a successful read transaction list request.
      type: object
      properties:
        account:
          oneOf:
            - $ref: "#/components/schemas/accountReferenceIban"
            - $ref: "#/components/schemas/accountReferenceBban"
            - $ref: "#/components/schemas/accountReferencePan"
            - $ref: "#/components/schemas/accountReferenceMaskedPan"
            - $ref: "#/components/schemas/accountReferenceMsisdn"
        transactions:
          $ref: "#/components/schemas/accountReport"
        balances:
          $ref: "#/components/schemas/balanceList"
        _links:
          $ref: "#/components/schemas/_linksDownload"
        
    camt.052: 
      description: |
        camt.052 XML message
      type: string

    camt.053:
      description: |
        camt.053 XML message
      type: string

    camt.054: 
      description: |
        camt.054 XML message
      type: string

    mt940: 
      description: |
        Data MT940 format in a text structure. 
      type: string

    mt942: 
      description: |
        Data MT942 format in a text structure.
      type: string

    #####################################################
    # _links
    #####################################################

    _linksDownload:
      description: |
        A list of hyperlinks to be recognised by the TPP.
        
        Type of links admitted in this response:
          - "download": a link to a resource, where the transaction report might be downloaded from in 
          case where transaction reports have a huge size.
        
        Remark: This feature shall only be used where camt-data is requested which has a huge size.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      required:
        - download
      properties:
        download:
          $ref: "#/components/schemas/hrefType"

    _linksAccountReport:
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      required:
        - account
      properties:
        account:
          $ref: "#/components/schemas/hrefType"
        first:
          $ref: "#/components/schemas/hrefType"
        next:
          $ref: "#/components/schemas/hrefType"
        previous:
          $ref: "#/components/schemas/hrefType"
        last:
          $ref: "#/components/schemas/hrefType"

    _linksTransactionDetails:
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      required:
        - transactionDetails
      properties:
        transactionDetails:
          $ref: "#/components/schemas/hrefType"

    _linksAccountDetails:
      description: |
        Links to the account, which can be directly used for retrieving account information from this dedicated account.
        
        Links to "balances" and/or "transactions"
        
        These links are only supported, when the corresponding consent has been already granted.
      type: object
      additionalProperties: 
        $ref: "#/components/schemas/hrefType"
      properties:
        balances:
          $ref: "#/components/schemas/hrefType"
        transactions:
          $ref: "#/components/schemas/hrefType"

    #####################################################
    # Tpp-Messages
    #####################################################

    tppMessageCategory:
      description: Category of the TPP message category
      type: string
      enum:
        - "ERROR"
        - "WARNING"

    tppMessageText:
      description: Additional explaining text to the TPP.
      type: string
      maxLength: 512

    tppMessage_GENERIC-FORMAT_ERROR_400:
      description: |
        Format of certain request fields are not matching the XS2A requirements.
        An explicit path to the corresponding field might be added in the return message.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "FORMAT_ERROR"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-PARAMETER_NOT_SUPPORTED_400:
      description: |
        The parameter is not supported by the API provider.
        This code should only be used for parameters that are described as
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "PARAMETER_NOT_SUPPORTED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-RESOURCE_UNKNOWN_404_403_400:
      description: |
        The addressed resource is unknown relative to the TPP.
          - 404 (if account-id in path)
          - 403 (if other resource in path)
          - 400 (if payload)
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "RESOURCE_UNKNOWN"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-RESOURCE_EXPIRED_403_400:
      description: |
        The addressed resource is associated with the TPP but has expired, not addressable anymore.
          - 403 (if path)
          - 400 (if payload)
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "RESOURCE_EXPIRED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-TIMESTAMP_INVALID_400:
      description: Timestamp not in accepted time period.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "TIMESTAMP_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-PERIOD_INVALID_400:
      description: Requested time period out of bound.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "PERIOD_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SCA_METHOD_UNKNOWN_400:
      description: |
        Addressed SCA method in the Authentication Method Select Request is unknown
        or cannot be matched by the ASPSP with the PSU.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SCA_METHOD_UNKNOWN"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_INVALID_401:
      description: |
        The contents of the signature/corporate seal certificate are not matching PSD2 general PSD2 
        or attribute requirements.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_EXPIRED_401:
      description: Signature/corporate seal certificate is expired.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_EXPIRED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_BLOCKED_401:
      description: |
        Signature/corporate seal certificate has been blocked by the ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_BLOCKED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_REVOKED_401:
      description: |
        Signature/corporate seal certificate has been revoked by QSTP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_REVOKED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CERTIFICATE_MISSING_401:
      description: |
        Signature/corporate seal certificate was not available in the request but is mandated for the corresponding.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CERTIFICATE_MISSING"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SIGNATURE_INVALID_401:
      description: Application layer eIDAS Signature for TPP authentication is not correct.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SIGNATURE_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SIGNATURE_MISSING_401:
      description: |
        Application layer eIDAS Signature for TPP authentication is mandated by the ASPSP but is missing.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SIGNATURE_MISSING"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CONSENT_INVALID_401:
      description: |
        The consent was created by this TPP but is not valid for the addressed service/resource.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONSENT_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CONSENT_EXPIRED_401:
      description: The consent was created by this TPP but has expired and needs to be renewed.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONSENT_EXPIRED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-TOKEN_UNKNOWN_401:
      description: The OAuth2 token cannot be matched by the ASPSP relative to the TPP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "TOKEN_UNKNOWN"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-TOKEN_INVALID_401:
      description: The OAuth2 token is associated to the TPP but is not valid for the addressed service/resource.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "TOKEN_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-TOKEN_EXPIRED_401:
      description: The OAuth2 token is associated to the TPP but has expired and needs to be renewed.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "TOKEN_EXPIRED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CORPORATE_ID_INVALID_401:
      description: The PSU-Corporate-ID cannot be matched by the addressed ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CORPORATE_ID_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-PSU_CREDENTIALS_INVALID_401:
      description: |
        The PSU-ID cannot be matched by the addressed ASPSP or is blocked, or a password resp.
        OTP was not correct.
        Additional information might be added.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "PSU_CREDENTIALS_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_AIS-CONSENT_INVALID_401:
      description: |
        The consent definition is not complete or invalid.
        In case of being not complete, the bank is not supporting a completion of the consent towards the PSU.
        Additional information will be provided.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONSENT_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SERVICE_BLOCKED_403:
      description: |
        This service is not reachable for the addressed PSU due to a channel independent blocking by the ASPSP.
        Additional information might be given by the ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SERVICE_BLOCKED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CONSENT_UNKNOWN_403_400:
      description: |
        The Consent-ID cannot be matched by the ASPSP relative to the TPP.
          - 403 (if path)
          - 400 (if payload)
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONSENT_UNKNOWN"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-SERVICE_INVALID_400_405: 
      description: |
        Message to the TPP: 
        The addressed service is not valid for the addressed resources or the submitted data.

          - 400 (if payload)
          - 405 (if HTTP method)
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "SERVICE_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_AIS-REQUESTED_FORMATS_INVALID_406: 
      description: |
        Message to the TPP: 
        The requested formats in the Accept header entry are not matching the formats offered by the ASPSP.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "REQUESTED_FORMATS_INVALID"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_GENERIC-CONFLICT_409:
      description: |
        Message to the TPP: 
        The request could not be completed due to a conflict with the current state of the resource.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "CONFLICT"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage_AIS-ACCESS_EXCEEDED_429: 
      description: |
        Message to the TPP: 
        The access on the account has been exceeding the consented multiplicity per day.
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          type: string
          enum: 
            - "ACCESS_EXCEEDED"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessages400: 
      description: Messages to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-FORMAT_ERROR_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-PARAMETER_NOT_SUPPORTED_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-SERVICE_INVALID_400_405"  
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_UNKNOWN_404_403_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_EXPIRED_403_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-TIMESTAMP_INVALID_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-PERIOD_INVALID_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-SCA_METHOD_UNKNOWN_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONSENT_UNKNOWN_403_400"
      example:
        [{
          "category": "ERROR",
          "code": "FORMAT_ERROR",
          "text": "additional text information of the ASPSP up to 512 characters"
        },{
          "category": "ERROR",
          "code": "FORMAT_ERROR",
          "text": "Further additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages401: 
      description: Messages with HTTP error code 401 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_EXPIRED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_BLOCKED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_REVOKED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CERTIFICATE_MISSING_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-SIGNATURE_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-SIGNATURE_MISSING_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONSENT_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONSENT_EXPIRED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-TOKEN_UNKNOWN_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-TOKEN_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-TOKEN_EXPIRED_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CORPORATE_ID_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_GENERIC-PSU_CREDENTIALS_INVALID_401"
          - $ref: "#/components/schemas/tppMessage_AIS-CONSENT_INVALID_401"
      example:
        [{
          "category": "ERROR",
          "code": "CERTIFICATE_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages403: 
      description: Messages with HTTP error code 403 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-SERVICE_BLOCKED_403"
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONSENT_UNKNOWN_403_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_UNKNOWN_404_403_400"
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_EXPIRED_403_400"
      example:
        [{
        "category": "ERROR",
        "code": "SERVICE_BLOCKED",
        "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages404: 
      description: Messages with HTTP error code 404 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-RESOURCE_UNKNOWN_404_403_400"
      example:
        [{
          "category": "ERROR",
          "code": "PRODUCT_UNKNOWN",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages405:
      description: Messages with HTTP error code 405 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-SERVICE_INVALID_400_405"
      example:
        [{
          "category": "ERROR",
          "code": "SERVICE_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages406:
      description: Messages with HTTP error code 406 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_AIS-REQUESTED_FORMATS_INVALID_406"
      example:
        [{
          "category": "ERROR",
          "code": "REQUESTED_FORMATS_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]
        
    tppMessages409:
      description: Messages with HTTP error code 409 to the TPP on operational issues.
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/tppMessage_GENERIC-CONFLICT_409"
      example:
        [{
          "category": "ERROR",
          "code": "CONFLICT",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessages429: 
      description: Messages with HTTP error code 429 to the TPP on operational issues.
      type: array
      items:
        anyOf: 
          - $ref: "#/components/schemas/tppMessage_AIS-ACCESS_EXCEEDED_429"
      example:
        [{
          "category": "ERROR",
          "code": "ACCESS_EXCEEDED",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

  parameters:
  #####################################################
  # Predefined Parameters
  #####################################################

    accountId:
      name: account-id
      in: path
      description: |
        This identification is denoting the addressed account. 
        The account-id is retrieved by using a "Read Account List" call. 
        The account-id is the "id" attribute of the account structure. 
        Its value is constant at least throughout the lifecycle of a given consent.
      required: true
      schema:
        $ref: "#/components/schemas/accountId"

    resourceId:
      name: resourceId
      in: path
      description: |
        This identification is given by the attribute resourceId of the corresponding entry of a transaction list.
      required: true
      schema:
        $ref: "#/components/schemas/resourceId"

    consentId_HEADER_mandatory:
      name: Consent-ID
      in: header
      description: |
        This then contains the consentId of the related AIS consent, which was performed prior to this payment initiation.
      required: true
      schema:
        $ref: "#/components/schemas/consentId"

    withBalanceQuery:
      name: withBalance
      in: query
      description: |
        If contained, this function reads the list of accessible payment accounts including the booking balance, 
        if granted by the PSU in the related consent and available by the ASPSP. 
        This parameter might be ignored by the ASPSP. 
      required: false
      schema:
        type: boolean

    dateFrom:
      name: dateFrom
      in: query
      description: |
        Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required.
      required: false
      schema:
        type: string
        format: date

    dateTo:
      name: dateTo
      in: query
      description: |
        End date (inclusive the data dateTo) of the transaction list, default is now if not given.
      required: false
      schema:
        type: string
        format: date

    entryReferenceFrom:
      name: entryReferenceFrom
      in: query
      description: |
        This data attribute is indicating that the AISP is in favour to get all transactions after 
        the transaction with identification entryReferenceFrom alternatively to the above defined period. 
        This is a implementation of a delta access. 
        If this data element is contained, the entries "dateFrom" and "dateTo" might be ignored by the ASPSP 
        if a delta report is supported.
        
        Optional if supported by API provider.
      required: false
      schema:
        type: string

    bookingStatus:
      name: bookingStatus
      in: query
      description: |
        Permitted codes are 
          * "booked",
          * "pending" and 
          * "both"
        "booked" shall be supported by the ASPSP.
        To support the "pending" and "both" feature is optional for the ASPSP, 
        Error code if not supported in the online banking frontend
      required: true
      schema:
        type: string
        enum:
          - "booked"
          - "pending"
          - "both"

    deltaList:
      name: deltaList
      in: query
      description: 
        This data attribute is indicating that the AISP is in favour to get all transactions after the last report access 
        for this PSU on the addressed account. 
        This is another implementation of a delta access-report.
        
        This delta indicator might be rejected by the ASPSP if this function is not supported.
        
        Optional if supported by API provider
      schema:
        type: boolean

    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    X-BicFi:
      name: X-BicFi
      in: header
      description: BICFI
      required: true
      schema:
        type: string
        pattern: "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
        example: "AAAADEBBXXX"

    Digest:
      name: Digest
      in: header
      description: Is contained if and only if the "Signature" element is contained in the header of the request.
      schema:
        type: string
      required: false # conditional
      example: "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="

    Signature:
      name: Signature
      in: header
      description: |
        A signature of the request by the TPP on application level. This might be mandated by ASPSP.
      schema:
        type: string
      required: false # conditional
      example: >
        keyId="SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE",algorithm="rsa-sha256",
        headers="Digest X-Request-ID PSU-ID TPP-Redirect-URI Date",
        signature="Base64(RSA-SHA256(signing string))"

    TPP-Signature-Certificate:
      name: TPP-Signature-Certificate
      in: header
      description: |
        The certificate used for signing the request, in base64 encoding. 
        Must be contained if a signature is contained.
      schema:
        type: string
        format: byte
      required: false # conditional

    PSU-IP-Address_optional:
      name: PSU-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between PSU and TPP.
      schema:
        type: string
        format: ipv4
      required: false
      example: 192.168.8.78

    PSU-IP-Port:
      name: PSU-IP-Port
      in: header
      description: |
        The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.
      schema:
        oneOf:
          - type: integer
          - type: string
      required: false
      example: "1234"

    PSU-Accept:
      name: PSU-Accept
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-Accept-Charset:
      name: PSU-Accept-Charset
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-Accept-Encoding:
      name: PSU-Accept-Encoding
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-Accept-Language:
      name: PSU-Accept-Language
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-User-Agent:
      name: PSU-User-Agent
      in: header
      description: |
        The forwarded Agent header field of the HTTP request between PSU and TPP, if available.
      schema:
        type: string
      required: false

    PSU-Http-Method:
      name: PSU-Http-Method
      in: header
      description: |
        HTTP method used at the PSU ? TPP interface, if available.
        Valid values are:
        * GET
        * POST
        * PUT
        * PATCH
        * DELETE
      schema:
        type: string
        enum:
          - "GET"
          - "POST"
          - "PUT"
          - "PATCH"
          - "DELETE"
      required: false

    PSU-Device-ID:
      name: PSU-Device-ID
      in: header
      description: |
        UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.
        UUID identifies either a device or a device dependant application installation.
        In case of an installation identification this ID need to be unaltered until removal from device.
      schema:
        type: string
        format: uuid
      required: false
      example: "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"

    PSU-Geo-Location:
      name: PSU-Geo-Location
      in: header
      description: |
        The forwarded Geo Location of the corresponding http request between PSU and TPP if available.
      schema:
        type: string
        pattern: '(GEO:)[0-9]{1,3}\.([-])?[0-9]{6}\,([-])?[0-9]{1,3}\.[0-9]{6}'
      required: false
      example: GEO:52.506931,13.144558

  headers:
  #####################################################
  # Reusable Response Header Elements
  #####################################################
  
    X-Request-ID:
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    Location:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: false

  responses:
  #####################################################
  # Reusabale Responses
  #####################################################
    #####################################################
    # Positive Responses
    #####################################################

    OK_200_AccountList:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/accountList"
          examples:
            "Example 1":
              $ref: "#/components/examples/accountListExample1"
            "Example 2":
              $ref: "#/components/examples/accountListExample2"
            "Example 3":
              $ref: "#/components/examples/accountListExample3"

    OK_200_AccountDetails:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/accountDetails"
          examples:
            "Regular Account": 
              $ref: "#/components/examples/accountDetailsRegularAccount"
            "Multicurrency Account":
              $ref: "#/components/examples/accountDetailsMulticurrencyAccount"

    OK_200_TransactionDetails:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/transactionDetails"
          examples:
            Example:
              $ref: "#/components/examples/transactionDetailsExample"

    OK_200_Balances:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readBalanceResponse-200"
          examples:
            "Example 1: Regular Account":
              $ref: "#/components/examples/balancesExample1_RegularAccount"
            "Example 2: Multicurrency Account":
              $ref: "#/components/examples/balancesExample2_MulticurrencyAcount"

    OK_200_Transactions:
      description: OK
      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/transactionsResponse-200_json"
          examples:
            "Example 1":
              $ref: "#/components/examples/transactionsExample1_RegularAccount_json"
            "Example 2":
              $ref: "#/components/examples/transactionsExample2_Download_json"
            "Example 3":
              $ref: "#/components/examples/transactionsExample3_MulticurrencyAccount_json"
        application/xml:
          schema:
            description: 
              Body of the XML response for a successful read transaction list request.
              
              The body has the structure of a either a camt.052 or camt.053 message.
              
              The camt.052 may include pending payments which are not yet finally booked. 
              The ASPSP will decide on the format due to the chosen parameters, 
              specifically on the chosen dates relative to the time of the request. 
              In addition the ASPSP might offer camt.054x structure e.g. in a corporate setting.
            oneOf:
              - $ref: "#/components/schemas/camt.052"
              - $ref: "#/components/schemas/camt.053"
              - $ref: "#/components/schemas/camt.054"
          examples:
            "Example: camt.052":
              $ref: "#/components/examples/camt.052Example"
            "Example: camt.053":
              $ref: "#/components/examples/camt.053Example"
            "Example: camt.054":
              $ref: "#/components/examples/camt.054Example"
        application/text:
          schema:
            description:
              Body of the Text response for a successful read transaction list request.
              
              The body has the structure of a MT94x message.
              
              The response body consists of an MT940 or MT942 format in a text structure. 
              The MT942 may include pending payments which are not yet finally booked. 
              The ASPSP will decide on the format due to the chosen parameters, 
              specifically on the chosen dates relative to the time of the request.
            oneOf:
              - $ref: "#/components/schemas/mt940"
              - $ref: "#/components/schemas/mt942"
          examples:
            "Example: MT940":
              $ref: "#/components/examples/mt940Example"
            "Example: MT942":
              $ref: "#/components/examples/mt942Example"

    #####################################################
    # Negative Responses
    #####################################################

    BAD_REQUEST_400:
      description: Bad Request
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages400" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "FORMAT_ERROR",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    UNAUTHORIZED_401:
      description: Unauthorized
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages401" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "CERTIFICATE_INVALID",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    FORBIDDEN_403:
      description: Forbidden
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages403" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "SERVICE_BLOCKED",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    NOT_FOUND_404:
      description: Not found
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages404" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "PRODUCT_UNKNOWN",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    METHOD_NOT_ALLOWED_405:
      description: Method Not Allowed
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages405" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "SERVICE_INVALID",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    NOT_ACCEPTABLE_406:
      description: Not Acceptable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages406" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "REQUESTED_FORMATS_INVALID",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    REQUEST_TIMEOUT_408: 
      description: Request Timeout
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY
      
    CONFLICT_409:
      description: Conflict
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages409"
      
    PRECONDITION_FAILED_412:
      description: Precondition Failed
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY

    UNSUPPORTED_MEDIA_TYPE_415:
      description: Unsupported Media Type
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY

    TOO_MANY_REQUESTS_429:
      description: Too Many Requests
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/tppMessages429" 
          example:
            { "tppMessages": [{
            "category": "ERROR",
            "code": "ACCESS_EXCEEDED",
            "text": "additional text information of the ASPSP up to 512 characters"
            }]
            }

    INTERNAL_SERVER_ERROR_500:
      description: Internal Server Error
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY

    SERVICE_UNAVAILABLE_503:
      description: Service Unavailable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No TPP-Messages defined
      #NO RESPONSE BODY

  examples:
    #####################################################
    # Predefined Examples
    #####################################################

    pain.001.001_SCT_singleTransaction:
      description: A pain.001.001.03 message in case of SCT
      value: >
        <Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.03">
          <CstmrCdtTrfInitn>
            <GrpHdr>
              <MsgId>MIPI-123456789RI-123456789</MsgId>
              <CreDtTm>2017-02-14T20:23:34.000Z</CreDtTm>
              <NbOfTxs>1</NbOfTxs>
              <CtrlSum>123</CtrlSum>
              <InitgPty>
                <Nm>PaymentInitiator</Nm>
                <Id><OrgId><Othr><Id>DE10000000012</Id>
                  <SchmeNm><Prptry>PISP</Prptry></SchmeNm></Othr></OrgId></Id>
              </InitgPty>
            </GrpHdr> 
            <PmtInf> 
              <PmtInfId>BIPI-123456789RI-123456789</PmtInfId>
              <PmtMtd>TRF</PmtMtd> 
              <NbOfTxs>1</NbOfTxs>
              <CtrlSum>123</CtrlSum>
              <PmtTpInf><SvcLvl><Cd>SEPA</Cd></SvcLvl></PmtTpInf>
              <ReqdExctnDt>2017-02-15</ReqdExctnDt>
              <Dbtr><Nm>PSU Name</Nm></Dbtr>
              <DbtrAcct><Id><IBAN>DE87200500001234567890</IBAN></Id></DbtrAcct>
              <ChrgBr>SLEV</ChrgBr>
              <CdtTrfTxInf>
                <PmtId><EndToEndId>RI-123456789</EndToEndId></PmtId> 
                <Amt><InstdAmt Ccy="EUR">123</InstdAmt></Amt>
                <Cdtr><Nm>Merchant123</Nm></Cdtr>
                <CdtrAcct><Id><IBAN> DE23100120020123456789</IBAN></Id></CdtrAcct>
                <RmtInf><Ustrd>Ref Number Merchant-123456</Ustrd></RmtInf>
              </CdtTrfTxInf>
            </PmtInf>
          </CstmrCdtTrfInitn>
        </Document>

    pain.002.001_SCT_singleTransaction:
      description: A pain.002.001.03 message in case of SCT
      value: >
        <Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.002.001.03">
          <CstmrPmtStsRpt>
            <GrpHdr>
              <MsgId>4572457256725689726906</MsgId>
              <CreDtTm>2017-02-14T20:24:56.021Z</CreDtTm>
              <DbtrAgt><FinInstnId><BIC>ABCDDEFF</BIC></FinInstnId></DbtrAgt>
              <CdtrAgt><FinInstnId><BIC>DCBADEFF</BIC></FinInstnId></CdtrAgt>
            </GrpHdr>
            <OrgnlGrpInfAndSts>
              <OrgnlMsgId>MIPI-123456789RI-123456789</OrgnlMsgId>
              <OrgnlMsgNmId>pain.001.001.03</OrgnlMsgNmId>
              <OrgnlCreDtTm>2017-02-14T20:23:34.000Z</OrgnlCreDtTm>
              <OrgnlNbOfTxs>1</OrgnlNbOfTxs>
              <OrgnlCtrlSum>123</OrgnlCtrlSum>
              <GrpSts>ACCT</GrpSts>
            </OrgnlGrpInfAndSts>
            <OrgnlPmtInfAndSts>
              <OrgnlPmtInfId>BIPI-123456789RI-123456789</OrgnlPmtInfId>
              <OrgnlNbOfTxs>1</OrgnlNbOfTxs>
              <OrgnlCtrlSum>123</OrgnlCtrlSum>
              <PmtInfSts>ACCT</PmtInfSts>
            </OrgnlPmtInfAndSts>
          </CstmrPmtStsRpt>
        </Document>

    camt.052Example:
      description: |
        camt.052 XML message
      value:
        camt.052 example needed#TODO Add example camt.052 

    camt.053Example:
      description: |
        camt.053 XML message
      value:
        camt.053 example needed#TODO Add example camt.053 

    camt.054Example:
      description: |
        camt.054 XML message
      value:
        camt.054 example needed#TODO Add example camt.054 

    mt940Example:
      description: |
        MT940 text message
      value:
        MT940 example needed#TODO Add example MT940 

    mt942Example:
      description: |
        MT940 text message
      value:
        MT942 example needed#TODO Add example MT942 

    accountDetailsRegularAccount:
      description: Account Details for a regular Account
      value:
        {
          "account":
            {
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
              "iban": "FR7612345987650123456789014", 
              "currency": "EUR",
              "product": "Girokonto",
              "cashAccountType": "CurrentAccount",
              "name": "Main Account",
              "_links": 
                {
                  "balances": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"},
                  "transactions": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"}
                 }
            }
        }

    accountDetailsMulticurrencyAccount:
      description: Account Details for a multicurrency Account
      value:
        {
          "account":
            {
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
              "iban": "FR7612345987650123456789014", 
              "currency": "XXX",
              "product": "Multicurrency Account",
              "cashAccountType": "CurrentAccount",
              "name": "Aggregation Account",
              "_links": 
                {
                  "balances": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"},
                  "transactions": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"}
                }
            }
        }

    accountListExample1:
      summary: Account list Example 1
      description: Response in case of an example, where the consent has been given on two different IBANs
      value:
        {"accounts":
           [
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
               "iban": "DE2310010010123456789", 
               "currency": "EUR",
               "product": "Girokonto",
               "cashAccountType": "CurrentAccount",
               "name": "Main Account",
               "_links": {
            "balances": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"},
            "transactions": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"}}
              },
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81g",
               "iban": "DE2310010010123456788",
               "currency": "USD",
               "product": "Fremdw�hrungskonto",
               "cashAccountType": "CurrentAccount",
               "name": "US Dollar Account",
               "_links": {
            "balances": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/balances" }}
               } 
        ]}

    accountListExample2:
      summary: Account list Example 2
      description: |
        Response in case of an example where consent on transactions and balances has been given to a multicurrency account which has two sub-accounts with currencies EUR and USD, and where the ASPSP is giving the data access only on sub-account level
      value:
        {"accounts":
           [
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
               "iban": "DE2310010010123456788", 
               "currency": "EUR",
               "product": "Girokonto",
               "cashAccountType": "CurrentAccount",
               "name": "Main Account",
               "_links": {
            "balances": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"},
            "transactions": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"}}
              },
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81g",
               "iban": "DE2310010010123456788",
               "currency": "USD",
               "product": "Fremdw�hrungskonto",
               "cashAccountType": "CurrentAccount",
               "name": "US Dollar Account",
               "_links": {
                 "balances": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/balances"},
                 "transactions": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/transactions"} }
               } 
        ]}

    accountListExample3:
      summary: Account list Example 3
      description: |
        Account list response in case of an example where consent on balances and transactions has been given to 
        a multicurrency account which has two sub-accounts with currencies EUR and USD and where the ASPSP is giving 
        the data access on aggregation level and on sub-account level
      value:
        {"accounts":
           [
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
               "iban": "DE2310010010123456788", 
               "currency": "XXX",
               "product": "Multi currency account",
               "cashAccountType": "CurrentAccount",
               "name": "Aggregation Account",
               "_links": {
            "balances": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e333/balances"},
            "transactions": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e333/transactions"}}
              },
        {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
               "iban": "DE2310010010123456788", 
               "currency": "EUR",
               "product": "Girokonto",
               "cashAccountType": "CurrentAccount",
               "name": "Main Account",
               "_links": {
            "balances": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"},
            "transactions": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"}}
              },
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81g",
               "iban": "DE2310010010123456788",
               "currency": "USD",
               "product": "Fremdw�hrungskonto",
               "cashAccountType": "CurrentAccount",
               "name": "US Dollar Account",
               "_links": {
            "balances": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/balances"},
            "transactions": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81g/transactions"} }
               } 
        ]}

    balancesExample1_RegularAccount:
      description: Response for a read balance request in case of a regular account.
      value: 
        {
          "account": {"iban": "FR7612345987650123456789014"},
          "balances":
              [{"balanceType": "closingBooked",
            "balanceAmount": {"currency": "EUR", "amount": "500.00"},
                "referenceDate": "2017-10-25"
                   },
               {"balanceType": "expected", 
                "balanceAmount": {"currency": "EUR","amount": "900.00"},
               "lastChangeDateTime": "2017-10-25T15:30:35.035Z"
               }]
        }

    balancesExample2_MulticurrencyAcount:
      description: |
        Response in case of a multicurrency account with one account in EUR, 
        one in USD, where the ASPSP has delivered a link to the balance endpoint relative to the aggregated 
        multicurrency account (aggregation level).
      value: 
        {
          "balances":
              [{"balanceType": "closingBooked",
                "balanceAmount": {"currency": "EUR", "amount": "500.00"},
                "referenceDate": "2017-10-25"
                   },
              {"balanceType": "expected",
              "balanceAmount": {"currency": "EUR", "amount": "900.00"},
              "lastChangeDateTime": "2017-10-25T15:30:35.035Z"
              },
           {"balanceType": "closingBooked", 
                "balanceAmount": {"currency": "USD", "amount": "350.00"},
                "referenceDate": "2017-10-25"
                   },
              {"balanceType": "expected",
               "balanceAmount": {"currency": "USD", "amount": "350.00"},
               "lastChangeDateTime": "2017-10-24T14:30:21Z"
                   }]
        }

    transactionsExample1_RegularAccount_json:
      description: Response in JSON format for an access on a regular account
      value:
        {
          "account": {"iban": "DE2310010010123456788" },
          "transactions":
            {
            "booked":
              [{
              "transactionId": "1234567",
              "creditorName": "John Miles",
              "creditorAccount": {"iban": "DE67100100101306118605"},
              "transactionAmount": {"currency": "EUR", "amount": "256.67"},
              "bookingDate": "2017-10-25",
              "valueDate": "2017-10-26", 
              "remittanceInformationUnstructured": "Example 1" 
                },{
                 "transactionId": "1234568",
                 "debtorName": "Paul Simpson",
                 "debtorAccount": {"iban": "NL76RABO0359400371"},
                 "transactionAmount": {"currency": "EUR", "amount": "343.01"},
                 "bookingDate": "2017-10-25",
                 "valueDate": "2017-10-26", 
                 "remittanceInformationUnstructured": "Example 2"
                }],
            "pending":
              [{
                 "transactionId": "1234569",
                 "creditorName": "Claude Renault",
                 "creditorAccount": {"iban": "FR7612345987650123456789014"},
                 "transactionAmount": {"currency": "EUR", "amount": "-100.03"},
                 "valueDate": "2017-10-26", 
                 "remittanceInformationUnstructured": "Example 3"
                }],
            "_links": {"account": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f"}}
             }
        }

    transactionsExample2_Download_json:
      description: Response in case of huge data amount as a download.
      value:
        { 
          "_links": {"download": {"href": "www.test-api.com/xs2a/v1/accounts/12345678999/transactions/download/"}}
        }

    transactionsExample3_MulticurrencyAccount_json:
      description: Response in JSON format for an access on a multicurrency account on aggregation level
      value:
        {
        "account": {"iban": "DE40100100103307118608"},
         "transactions":
           {"booked": 
             [{
               "transactionId": "1234567",
               "creditorName": "John Miles",
               "creditorAccount": {"iban": "DE67100100101306118605"},
               "transactionAmount": {"currency": "EUR", "amount": "-256.67"},
               "bookingDate": "2017-10-25",
               "valueDate": "2017-10-26", 
               "remittanceInformationUnstructured": "Example 1"
              },{
               "transactionId": "1234568",
               "debtorName": "Paul Simpson",
               "debtorAccount": {"iban": "NL76RABO0359400371"},
               "transactionAmount": {"currency": "EUR", "amount": "343.01"},
               "bookingDate": "2017-10-25",
               "valueDate": "2017-10-26", 
               "remittanceInformationUnstructured": "Example 2"
              },{
               "transactionId": "1234569",
               "debtorName": "Pepe Martin",
               "debtorAccount": {"iban": "SE9412309876543211234567"},
               "transactionAmount": {"currency": "USD", "amount": "100"},
               "bookingDate": "2017-10-25",
               "valueDate": "2017-10-26", 
               "remittanceInformationUnstructured": "Example 3"
              }],
           "pending":
             [{
               "transactionId": "1234570",
               "creditorName": "Claude Renault",
               "creditorAccount": {"iban": "FR7612345987650123456789014"},
               "transactionAmount": {"currency": "EUR", "amount": "-100.03"},
               "valueDate": "2017-10-26", 
               "remittanceInformationUnstructured": "Example 4"
              }],
           "_links": {"account": {"href": "/v1/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f"}}
           }
        }

    transactionDetailsExample:
      description: Example for transaction details
      value:
        {
          "transactionsDetails":
             {
               "transactionId": "1234567",
               "creditorName": "John Miles",
               "creditorAccount": {"iban": "DE67100100101306118605"},
               "mandateId": "Mandate-2018-04-20-1234",
               "transactionAmount": {"currency": "EUR", "amount": "-256.67"},
               "bookingDate": "2017-10-25",
               "valueDate": "2017-10-26", 
               "remittanceInformationUnstructured": "Example 1",
               "bankTransactionCode": "PMNT-RCVD-ESDD",
             }
        }

tags:
  #####################################################
  # Predefined Tags to Group Methods
  #####################################################
  - name: Account Information Service (AIS)
    description: |
      The Account Information Service (AIS) offers the following services
        * Transaction reports for a given account including balances if applicable.
        * Balances of a given account,
        * A list of available accounts,
        * Account details of a given account or of the list of all accessible accounts relative to a granted consent